<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HelloWorld</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hiztr.cn/"/>
  <updated>2022-05-21T01:55:57.787Z</updated>
  <id>https://hiztr.cn/</id>
  
  <author>
    <name>HelloWorldZTR</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>联想 T470 黑苹果小记</title>
    <link href="https://hiztr.cn/2022/05/21/t470-hackintosh/"/>
    <id>https://hiztr.cn/2022/05/21/t470-hackintosh/</id>
    <published>2022-05-21T00:30:38.000Z</published>
    <updated>2022-05-21T01:55:57.787Z</updated>
    
    <content type="html"><![CDATA[<p>前些天拿到了块新的 nvme 硬盘，顺道给之前没装上的 t470 装个黑苹果。</p><span id="more"></span><iframe id="bilibili" src="//player.bilibili.com/player.html?bvid=BV11i4y1S7Lb"  allow="accelerometer; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>其实这台电脑本来不适合黑苹果，因为他的网卡和硬盘曾经都是无解的。但是现在有了<code>itlwm</code>和多余的硬盘，就可以安装黑苹果了。<br>这台电脑其实性能很好，装黑苹果使用体验也很好，基本上是不会卡顿的。但是想真正达到白苹果的体验还得买个博通网卡玩玩隔空投送。</p><h2 id="硬件一览"><a href="#硬件一览" class="headerlink" title="硬件一览"></a>硬件一览</h2><image src="https://s2.loli.net/2022/05/21/AWmYCN4qbUBupd5.jpg" style="width:80%"></image><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>CPU</td><td>Intel Core i7 7500U</td></tr><tr><td>RAM</td><td>DDR4 2133 2x4G</td></tr><tr><td>网卡</td><td>Intel ac8260</td></tr><tr><td>显卡</td><td>HD 520(已禁用独显)</td></tr><tr><td>机型</td><td>20JN(开头)</td></tr><tr><td>硬盘</td><td>换的杂牌m.2 128G</td></tr></tbody></table><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><h3 id="下载和制作安装盘"><a href="#下载和制作安装盘" class="headerlink" title="下载和制作安装盘"></a>下载和制作安装盘</h3><p>我先用<code>installinstallmacos</code>下载了最新版 MacOS Monterey 的安装盘<br><a href="https://github.com/munki/macadmin-scripts/blob/main/installinstallmacos.py">https://github.com/munki/macadmin-scripts/blob/main/installinstallmacos.py</a></p><p>然后，我在另一台 mac 上用如下命令刻录了一个启动 U 盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /Applications/Install\ macOS\ Monterey.app/Contents/Resources/createinstallmedia --volume /Volumes/Udisk</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/U6HjupeGzMlyCvQ.jpg" alt="macos-big-sur-terminal-create-bootable-installer.jpg"></p><p>其中 Udisk 是U盘的卷名，需要输入密码和确认<br>出现提示时，请键入管理员密码，然后再次按下 Return 键。在您键入密码时，“终端”不会显示任何字符。<br>出现提示时，请键入 Y 以确认您要抹掉宗卷，然后按下 Return 键。在抹掉宗卷的过程中，“终端”会显示进度。<br>宗卷被抹掉后，可能会看到一条提醒，提示“终端”要访问可移除宗卷上的文件。点按“好”以允许继续拷贝。 </p><p>如果你是Windows 用户的话，可以尝试用<code>TransMac</code>来制作安装盘，然后用<code>DiskGenius</code>直接打开EFI分区进行文件拷贝。这是我认为最便捷的方式了。</p><p>之后我制作了EFI，主要是从Github上找了个ACPI，然后更新了一下驱动和Clover引导器。<strong>EFI分享链接见文末.</strong></p><p>链接: &lt;<a href="https://pan.baidu.com/s/1f0y4dfgZpfKnxaQHuTpcnw">https://pan.baidu.com/s/1f0y4dfgZpfKnxaQHuTpcnw</a> &gt;<br>提取码: <code>04lo</code></p><p>然后，我用Clover Configurator 挂载上刻录好的安装盘的EFI 分区，把引导放了进去。</p><p><img src="https://s2.loli.net/2022/05/21/85L6jkyMhBNqi3z.png" alt="Screen Shot 2022-05-21 at 9.38.47 AM.png"></p><p><img src="https://s2.loli.net/2022/05/21/antFi1HNpTRgKWS.png" alt="Screen Shot 2022-05-21 at 9.40.21 AM.png"></p><h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><p>我把安装盘插到笔记本上，按F12选择启动项，成功进入了安装器。<br>上一次因为<code>PM981</code>的原因没有安装成功，这一次换了硬盘，第一阶段安装没出任何问题。</p><p>但是在重启进入第二次安装阶段的时候，启动项没了。我试着从<code>Preboot</code>卷启动，没想到正常安装了。<br>接着就是进入系统，配置各种设置，都是常规操作了。</p><h3 id="进入系统"><a href="#进入系统" class="headerlink" title="进入系统"></a>进入系统</h3><p>我把EFI分区用Clover Configurator 克隆到了笔记本硬盘里，克隆EFI的过程同安装盘，然后检查了驱动，发现如下</p><table><thead><tr><th>部件</th><th>状态</th></tr></thead><tbody><tr><td>显卡</td><td>显存 ✅</td></tr><tr><td>网卡</td><td>WI-FI✅</td></tr><tr><td></td><td>蓝牙❎</td></tr><tr><td>声卡及输入输出</td><td>✅</td></tr><tr><td>电源管理</td><td>✅</td></tr><tr><td>触摸板小红点</td><td>✅</td></tr><tr><td>摄像头</td><td>✅</td></tr><tr><td>雷电</td><td>❎</td></tr><tr><td>息屏和休眠</td><td>❎</td></tr></tbody></table><p>为了防止休眠后冻屏，我使用了如下命令关闭了休眠</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo pmset -a hibernatemode 0</span><br><span class="line">sudo pmset -a autopoweroff 0</span><br><span class="line">sudo pmset -a standby 0</span><br><span class="line">sudo <span class="built_in">rm</span> /var/vm/sleepimage</span><br></pre></td></tr></table></figure><h2 id="EFI介绍及分享"><a href="#EFI介绍及分享" class="headerlink" title="EFI介绍及分享"></a>EFI介绍及分享</h2><p>这个EFI主要是基于Github上的项目<br>我做了如下改动</p><ol><li>更新了大部分驱动和Clover</li><li>配置了<code>itlwm</code>来驱动 Intel网卡</li><li>修改了<code>config.plist</code>的语法错误</li><li>编译了T460的ACPI Table,使音响能正常驱动</li></ol><p>链接: &lt;<a href="https://pan.baidu.com/s/1f0y4dfgZpfKnxaQHuTpcnw">https://pan.baidu.com/s/1f0y4dfgZpfKnxaQHuTpcnw</a> &gt;<br>提取码: <code>04lo</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前些天拿到了块新的 nvme 硬盘，顺道给之前没装上的 t470 装个黑苹果。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hackintosh" scheme="https://hiztr.cn/categories/Hackintosh/"/>
    
    
  </entry>
  
  <entry>
    <title>2022年 RB67 入坑指南</title>
    <link href="https://hiztr.cn/2022/02/10/rb67-introduction/"/>
    <id>https://hiztr.cn/2022/02/10/rb67-introduction/</id>
    <published>2022-02-10T00:45:09.000Z</published>
    <updated>2022-05-20T14:01:40.304Z</updated>
    
    <content type="html"><![CDATA[<p>我于2022年2月8日在闲鱼以3000的价格购得了一部玛米亚 RB67 pro 现在记录下来</p><span id="more"></span><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>RB67 是玛米亚在上世纪七十年代开始制造的一款中画幅相机，可旋转的后背（Rotating Back）是该系列最显著的特征。</p><p><img src="https://s2.loli.net/2022/05/20/DOXI9ntK2seQ7xb.jpg" alt="rb67.jpeg"></p><p>该系列共有三个产品，分别是<code>Pro</code> <code>Pro S</code> <code>Pro SD</code><br>其中Pro年代最久远，功能最少，所以很少见到；Pro S和SD都比较新，功能也相近，所以推荐的多。<br>不知从啥时候开始，胶卷突然就火起来了。120相机也长得飞起，links和跑焦熊可谓是玛米亚本世纪代言人了（笑）。<br>说起来中画幅的复兴，还得说道周杰伦的《说好不哭》。MV 中男主收到的哈苏503就是经典的一台中画幅相机。从此之后中画幅的价格就一路水涨船高，哈苏已经去到小一万，成为比肩徕卡的存在。身为穷人的我也只能选RB67和基辅这类大路货了。<br>RB67这类120单反，最吸引人的，还是独特的<strong>腰平取景</strong>方式。这类取景器的美，是没使用过的人体会不到的。甚至有的时候会觉得，取景器里看到的画面比实际洗出来的胶片还要好看。又有谁不喜欢一个又大又亮的光学取景器呢？</p><h2 id="特性介绍"><a href="#特性介绍" class="headerlink" title="特性介绍"></a>特性介绍</h2><h3 id="镜头"><a href="#镜头" class="headerlink" title="镜头"></a>镜头</h3><p>玛米亚的镜头差距相对还是很大的，我这台就是用了<code>Sekor C 127mm f3.8</code>镜头。有趣的是，这些镜头都是镜间快门。但是出身精工（做表的），这些快门也很准很有力，也算是名家出身了。</p><p>玛米亚全系的镜头分为最高贵的APO系列，新一些的KL系列，比较好的Sekor C系列和平平无奇的Sekor系列。<br>这其中，APO价格极其昂贵，而且由于是长焦，重量十分感人，一般没人会买来用。<br>KL系列是后期，相对来说效果会好一点，但是要注意是否配有RB67兼容接圈，毕竟这个圈也不好买。<br>Sekor C是最推荐的镜头，因为它的性价比居高。<br>Sekor因为比较老了，不是很推荐，备用的话也不是不行。</p><p>在选购上述镜头的时候要特别注意镜头是否起雾，由于胶合工艺问题，老些的镜头容易起雾。虽然可以解决，但是比较麻烦。</p><h3 id="对焦屏"><a href="#对焦屏" class="headerlink" title="对焦屏"></a>对焦屏</h3><p>玛米亚的增亮对焦屏原厂及最佳，并不是很需要裂像对焦，因为它实在是太大了，你要是说实在是看不清还有个放大镜。这个放大镜还是挺实用的，但要注意是不是老花镜片，不然就越看越不清了。<br>原厂的对焦屏有一层有机涂层，注意磨砂面一定不能用酒精擦，不然就废了。</p><p><img src="https://s2.loli.net/2022/05/20/fwHJNqsPAodD7v8.jpg" alt="对焦屏.jpeg"></p><h3 id="后背"><a href="#后背" class="headerlink" title="后背"></a>后背</h3><p><img src="https://s2.loli.net/2022/05/20/N8vnyidRUhG1XCF.png" alt="说明书.jpeg"></p><p>初代67的后背比之前的结实多了，是纯金属的，拿在手里很有分量。我这台机原先机主摔了好几次都没坏。<br>这些后背都带防多重曝光机构，但是如果机身不支持的话需要先掰一下计数窗对着的那个金属拨片(多重曝光手柄)才能过片。</p><p>记得拍照前拔豆腐刀（侧面）不然是按不下快门的。</p><p><img src="https://s2.loli.net/2022/05/20/p9je8xIvaq15bDE.jpg" alt="645后背.jpeg"></p><h3 id="其他事项"><a href="#其他事项" class="headerlink" title="其他事项"></a>其他事项</h3><p>玛米亚用的是<code>3/8</code>而不是常规的<code>1/4</code>脚架接口，一般商家都会附赠一个转接环。<br>另外跑焦熊出了一款专用快装板，感觉很实用，可以接手柄。但是据说会头重脚轻？</p><p>另外快门扳手不按到底是不会反弹的，但是反光板可能已经复位了，这时候直接按到底才能按快门。<br>我第一次就被这个快门扳手摆了一道，怎么也按不动快门，没想到是这么回事😓。</p><p>另外玛米亚有<strong>反光板预升</strong>的功能，可以避免机器震动，但这时候你必须一台快门线，尤其是使用T门的时候。</p><p>另外玛米亚使用了皮腔对焦，这使得它能兼容很多奇怪镜头，但是这个东西可能会坏，幸好网上可以换。<br>如果皮腔伸出来太长，需要根据机器侧面的曝光信息板增加曝光。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>玛米亚RB67作为上个世纪最常见的影楼机必然有他的独特之处。他全金属的机身就说明了坚固耐用的特点，全模块化的设计为快速摄影提供了便捷，多种多样的安全设施最大程度降低了废片率。不得不说，这台相机不仅仅是相机，更是一件工业与艺术的结晶。作为中画幅新手的入坑之选，它实在是再合适不过了。四五十年后，再度捧起它来，洋溢在我心中的激动，与几十年前的那位摄影师应该一样吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我于2022年2月8日在闲鱼以3000的价格购得了一部玛米亚 RB67 pro 现在记录下来&lt;/p&gt;
    
    </summary>
    
    
      <category term="Other" scheme="https://hiztr.cn/categories/Other/"/>
    
    
      <category term="loafing" scheme="https://hiztr.cn/tags/loafing/"/>
    
  </entry>
  
  <entry>
    <title>2021 年 NEX-C3 折腾手记</title>
    <link href="https://hiztr.cn/2021/07/19/nex-c3/"/>
    <id>https://hiztr.cn/2021/07/19/nex-c3/</id>
    <published>2021-07-18T23:22:36.000Z</published>
    <updated>2021-07-19T01:52:33.938Z</updated>
    
    <content type="html"><![CDATA[<p>NEX-C3 是索尼发布于 2011 年 4 月的一款微单，可以说是索尼第一代微单家族中的一员。<br>出于经济原因（咳），我在十年之后又不得不让它带病出征了。</p><span id="more"></span><p>我们先看一下参数:</p><table><thead><tr><th>主要性能</th><th></th></tr></thead><tbody><tr><td>传感器类型</td><td>Exmor APS HD CMOS</td></tr><tr><td>传感器尺寸</td><td>APS画幅（23.5*15.6mm）</td></tr><tr><td>最大像素数</td><td>1650万</td></tr><tr><td>影像处理器</td><td>BIONZ Engine</td></tr><tr><td>最高分辨率</td><td>4912×3264(JPEG/RAW)</td></tr><tr><td>高清摄像</td><td>高清（720P）</td></tr><tr><td>显示屏像素</td><td>92.1万像素液晶屏</td></tr><tr><td>对焦点数</td><td>25点，49区测光</td></tr></tbody></table><p>我仅花了600元就从闲鱼上蹲到了这台机器（1650套机)，可以说，这是入门摄影（手机除外）的最低门槛了。</p><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><p><strong>价格低</strong>是我选择奶昔系列的首要原因。相比之下，3000大洋的全新在产<code>a6000</code>，除了像素、对焦等功能和evf（电子取景器）之外，并无太大优势。对于摄影小白来说，性价比着实不高。如果你觉得nfc，Wi-Fi传图很重要，那就加加钱上吧。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(a6000参数)</span><br><span class="line">传感器：APS画幅（23.5*15.6mm）</span><br><span class="line">有效像素：2430万</span><br><span class="line">显示屏尺寸：3英寸</span><br><span class="line">显示屏像素：92万像素液晶屏</span><br></pre></td></tr></table></figure><p>一般情况下，这个1620W像素已经够用了，后期裁切也有空间。如果你想要比手机画质好一点的相机话，那么它可以满足你的需求。<br>（另外说一下，像素低并不一定画质差。大家一定不要拿相机的像素和手机比，就算16mp拍出来效果也可以好过什么多少万像素的手机。同像素，传感器越大画质越好，所以不太推荐卡片机和手机。）<br><img src="https://i.loli.net/2021/07/19/98kRyXuB2tel3nV.jpg" alt="DSC00132.jpg"><br>另外该机器配有峰值对焦功能，<strong>配合手动镜头玩转接太香了</strong>。几乎市面上的全部卡口都可以转接，无穷远也合焦。我现在长期搭配200块星耀的<code>35mm f1.7</code>，等效50mm 拍拍风光人物都不错。用转接环玩老镜头也不错。</p><p>这个价位，要什么自行车。</p><h2 id="劣势"><a href="#劣势" class="headerlink" title="劣势"></a>劣势</h2><p>十年前的老机器了，总会多多少少有些不足之处。<br>这个机器最大的三个问题是：<strong>按键失灵、屏幕脱膜和电池拉垮</strong>。</p><p>按键失灵指的是那个旋钮，上下左右可能颠倒错乱，但是旋转功能是正常的，正常调节光圈快门以及翻看照片是没有问题的。</p><p><img src="https://i.loli.net/2021/07/19/9mt7RGy3HaVEp56.png" alt="Screen Shot 2021-07-19 at 8.11.23 AM.png"></p><p>另外屏幕这个问题比上一个还严重。大概是这个样子</p><p><img src="https://i.loli.net/2021/07/19/Xchn5KqZ4xRfgyT.jpg" alt="laji.jpg"></p><p>平常室内使用也没什么问题，但是户外大太阳底下就啥也看不见。本来这个屏幕素质就差，加上没有取景器，只能通过屏幕取景，拍出来的照片就是这样的：<br>（你实际拍出来的vs.你以为你拍出来的.jpg)<br><img src="https://i.loli.net/2021/07/19/A4DLNknVE3mx26I.png" alt="Screen Shot 2021-07-19 at 8.14.25 AM.png"><br>我说这和a6000是一块屏幕你敢信？</p><p>电池拉垮这也是没办法的事，索尼十年都没换掉垃圾的<code>fw50</code>。fw——废物，索尼也知道这玩意拉垮。拍个一百张就没电了。</p><p>当然这些问题都有解决办法，<strong>按钮可以在淘宝上买到配件，50一个不包邮，换起来也简单；屏幕可以买个液晶屏遮光罩，35一个；电池就买上一打，边充边用吧</strong>。</p><p>然而我就为了省这个三十五十的，又花回去了不合适吧。如果你也准备凑合着用，请注意这些问题</p><p>这是遮光罩的样子:<br><img src="https://i.loli.net/2021/07/19/ZCDRAHe7FOgQ6PL.png" alt="遮光罩"></p><p>另外就是索尼通病了，迷宫菜单，蜜汁白平衡和拉垮套头。（selp 1650 f8gm没说你)<br>当然这些问题后期多少也是可以修复的。</p><h2 id="总而言之"><a href="#总而言之" class="headerlink" title="总而言之"></a>总而言之</h2><p>如果你准备买一个十年前的数码产品，最好还是知道它的通病，顺便降低一下你的期望。快门数、暗病虽然不太好听但也要问问卖家。</p><p>如果你能接受的了这些问题和潜在的问题，并且真正经济有限的话，那<strong>这个相机是你很好的选择。600的价格，用来记录生活，旅游拍照都很在行</strong>。摄影的乐趣不在于花钱，而是在于过程的体验。更重要的是，是你在用它，还是它在用你。只要方法得当，奶昔也能拍出大片。</p><p>毕竟老骥伏枥，志在千里，接下来的几年里，它就将陪我作伴，记录我的生活了。</p><h2 id="样片儿"><a href="#样片儿" class="headerlink" title="样片儿"></a>样片儿</h2><p><img src="https://i.loli.net/2021/07/19/6wQBRcnTsyIoqbK.jpg" alt="DSC00234.jpg"></p><p><img src="https://i.loli.net/2021/07/19/FOVZPdRaxyGvs93.jpg" alt="DSC00252.jpg"></p><p><img src="https://i.loli.net/2021/07/19/jdez2ImRJTVQCbr.jpg" alt="DSC00248.jpg"></p><p><img src="https://i.loli.net/2021/07/19/iPtcBbg9S8OVA4N.jpg" alt="DSC00134.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;NEX-C3 是索尼发布于 2011 年 4 月的一款微单，可以说是索尼第一代微单家族中的一员。&lt;br&gt;出于经济原因（咳），我在十年之后又不得不让它带病出征了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Other" scheme="https://hiztr.cn/categories/Other/"/>
    
    
      <category term="loafing" scheme="https://hiztr.cn/tags/loafing/"/>
    
  </entry>
  
  <entry>
    <title>就国内 python 中文站的一点看法</title>
    <link href="https://hiztr.cn/2021/07/02/thinks-on-python/"/>
    <id>https://hiztr.cn/2021/07/02/thinks-on-python/</id>
    <published>2021-07-02T03:13:32.000Z</published>
    <updated>2021-07-18T23:24:13.592Z</updated>
    
    <content type="html"><![CDATA[<p>最近我想提高自己的python技能，于是着手编写一个有趣的小app。<br>然而当我遇到了问题，准备去问问度娘时，直接被震惊了。<br>  <span id="more"></span><br>点开前几个网站看，都是机翻<code>stackoverflow</code>的，读起来一点中文的感觉也没有。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tkinter由于事件循环，after方法和绑定，它本身是异步的。</span><br><span class="line">但是，如果您尝试使用asyncio它也是可行的，但是首先让我们考虑一下您尝试过的方法。</span><br><span class="line">您的第一次尝试显然是失败的，因为spam当它是时，您尝试作为泛型函数进行调用coroutine。您的其他尝试比第一次尝试更正确，但是await coroutine或者yield from coroutine只能用于从另一个协程启动协程，因此再次失败。</span><br><span class="line">因此，启动该野兽的正确方法是使用一种不言自明的方法（或old ，它只是一个已弃用的别名）来安排其执行时间。ensure_futureasync</span><br></pre></td></tr></table></figure><p>再看看CSDN的，都是搬运来的，代码格式大概如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">onClick</span>(<span class="params"> self, controlId </span>):<span class="comment">#吧啦吧啦吧啦BaseWindow.onClick(self, controlId)if controlId == 810:self.selectRange(self.getControl(810).getSelectedPosition())#吧啦吧啦吧啦else:play(self.pdata[int(self.getControl(820).getSelectedItem().getLabel2())][&#x27;videoid&#x27;])</span></span><br></pre></td></tr></table></figure><p>我寻思为了这点流量至于整这么烂的活吗？真让我想起百度问答驴唇不对马嘴的回复。有被气到，文章就放在这，五年后看看有没有改善。<br>当然了，也有不少人的博客表达清晰，简单明了，可惜总被搜索引擎藏着。希望他们的精神能被多多发扬吧。😮‍💨</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近我想提高自己的python技能，于是着手编写一个有趣的小app。&lt;br&gt;然而当我遇到了问题，准备去问问度娘时，直接被震惊了。&lt;br&gt;
    
    </summary>
    
    
      <category term="Develop" scheme="https://hiztr.cn/categories/Develop/"/>
    
    
      <category term="loafing" scheme="https://hiztr.cn/tags/loafing/"/>
    
  </entry>
  
  <entry>
    <title>如何解决黑苹果睡眠 Kernel Panic（AppleHDAHDMI_DPDriver::setPowerState）</title>
    <link href="https://hiztr.cn/2021/01/31/Powerstate-error-solution/"/>
    <id>https://hiztr.cn/2021/01/31/Powerstate-error-solution/</id>
    <published>2021-01-31T08:29:15.000Z</published>
    <updated>2022-02-10T00:13:40.557Z</updated>
    
    <content type="html"><![CDATA[<p>黑苹果系统睡眠后不能唤醒，而是在唤醒几秒钟后直接panic重启的解决方法。</p><span id="more"></span><p>日志如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">panic(cpu 3 caller 0xffffff800202b747): &quot;AppleHDAHDMI_DPDriver::setPowerState(0xffffff801e31b800 : 0xffffff7f83d87730, 0 -&gt; 1) timed out after 10160 ms&quot;@/BuildRoot/Library/Caches/com.apple.xbs/Sources/xnu/xnu-6110.0.0.121.5/iokit/Kernel/IOServicePM.cpp:5277</span><br><span class="line">Backtrace (CPU 3), Frame : Return Address</span><br><span class="line">bla bla bla......</span><br></pre></td></tr></table></figure><p>似乎这个问题只在 Haswell 架构的 CPU 出现。包括M73准系统很多EFI。</p><p>看到 <a href="https://www.tonymacx86.com/threads/help-applealc-kernel-panic-after-catalina-update.284654/">Tonymacx86</a>也有在讨论这个问题，我采取了一个更简便的方法。如果愿意研究的话可以仔细看看。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>打开 Opencore Configurator （Clover 类似）</p><p>挂载 EFI 分区（下面一栏）<br><img src="https://i.loli.net/2021/01/31/HIyO3Adx6jXZwMm.png" alt="截屏2021-01-31 下午4.39.35.png"><br><img src="https://i.loli.net/2021/01/31/DCaWEbN48HyLunr.png" alt="截屏2021-01-31 下午4.40.03.png"><br>文件 - 打开（选择你的<code>config.plist</code>）<br><img src="https://i.loli.net/2021/01/31/mqfx2Obw9jDAPK3.png" alt="截屏2021-01-31 下午4.40.43.png"><br>在<code>Device Properties</code>下面<code>PciRoot(0,0x0)/Pci(0x1b,0x0)</code>添加一个键<code>No-hda-gfx</code>,值为<code>00000000</code>（八个零）<br><small>可以通过右下角的➕添加</small><br><img src="https://i.loli.net/2021/01/31/KDaEMlVyPL8JoIY.png" alt="截屏2021-01-31 下午4.40.57.png"><br>保存文件，重启电脑。试试看休眠是不是不会重启了呢</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;黑苹果系统睡眠后不能唤醒，而是在唤醒几秒钟后直接panic重启的解决方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hackintosh" scheme="https://hiztr.cn/categories/Hackintosh/"/>
    
    
  </entry>
  
  <entry>
    <title>联想M73黑苹果折腾</title>
    <link href="https://hiztr.cn/2021/01/29/lenovo-m73-hackintosh/"/>
    <id>https://hiztr.cn/2021/01/29/lenovo-m73-hackintosh/</id>
    <published>2021-01-29T01:12:43.000Z</published>
    <updated>2021-07-02T07:26:05.336Z</updated>
    
    <content type="html"><![CDATA[<p>该系统我使用了一段时间，体验极佳。完美支持 macOS Big Sur，刷视频写文档，写写代码（跑服务器当我没说）都很流畅，mc也能上60帧。基本满足大家的日常需求。</p><span id="more"></span><p>由于macOS的魔法优化，4G内存减去被核显吞掉的1G多还是绰绰有余。流畅度没的说，现在还有什么配置会卡</p><p>白色的出其意料的好看，特别mini，就跟全新的一样<br><img src="https://i.loli.net/2021/07/02/LbR4lq8n1QxuG6h.jpg" alt="waiguan.jpg"></p><h2 id="配置如下"><a href="#配置如下" class="headerlink" title="配置如下"></a>配置如下</h2><table><thead><tr><th>部件</th><th>描述</th></tr></thead><tbody><tr><td>CPU</td><td>i3 4330（其实应该买i3 4330T 搞错了）</td></tr><tr><td>内存</td><td>ddr3 1333 2g x2 （笔记本的，要什么自行车，主力机还是买两根4G的吧）</td></tr><tr><td>准系统</td><td>买的白的NEC的定制版(m73p)，配了个一看就是其他厂的65W电源，带盘架没网卡</td></tr><tr><td>硬盘</td><td>sata固态（我的旧电脑上扣下来的不要钱:P）</td></tr><tr><td>总价</td><td>520 + 硬盘钱</td></tr></tbody></table><p>挺便宜的，大家买的时候注意看看，其实也不指望能用多久，毕竟垃圾佬么</p><h2 id="折腾过程"><a href="#折腾过程" class="headerlink" title="折腾过程"></a>折腾过程</h2><p>果真他人的力量是伟大的，我就把旧的macOS high sierra盘EFI分区一改（b站找的EFI）简单一装，电源一插，一开机就成了。给我惊到了</p><blockquote><p>远景论坛： <a href="http://bbs.pcbeta.com/viewthread-1875281-1-1.html">http://bbs.pcbeta.com/viewthread-1875281-1-1.html</a><br>EFI： 链接: <a href="https://pan.baidu.com/s/1bOnmUC2P_5nbp3udTNN9VA">https://pan.baidu.com/s/1bOnmUC2P_5nbp3udTNN9VA</a><br>密码: ljnp<br>解压密码：XCer</p></blockquote><p>如果有人想装这个黑苹果可以去<a href="https://www.bilibili.com/video/BV1FZ4y1G7Hf">下载EFI</a>，再<strong>按照网上的教程</strong>做就行。</p><p>然后我从app store下载了个bigsur安装器，奇怪了，总显示下载出错。于是我整了个百试不爽的 <code>Installinstallmacos.py</code>，下载了完整版安装包，一个多小时就装好了(<a href="https://github.com/munki/macadmin-scripts">https://github.com/munki/macadmin-scripts</a>)<br><strong>如果安装macOS显示服务器错误，使用该软件下载完整包即可。</strong></p><h2 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h2><p><img src="https://i.loli.net/2021/01/29/UjBHVAa8SPwCpYT.jpg" alt="f2622b152e1eafabc062ead63800bf2f1f296a0b.jpg"></p><p>安装好后，我用opencore configurator把引导菜单去掉，注入了三码，打开 intel power gadget 一看,wtm空载60多度，我一度怀疑没涂硅脂（事实证明散热器安装压力小了点，大家拧到底就行）<br><img src="https://i.loli.net/2021/01/29/kcKujR1zYQoGHMC.png" alt="732b37d73a88216950ad47eb9411480bca02dd91.png"></p><p>后来，我在翻bios中发现了转机</p><ol><li>戳爆<code>F2</code>进bios</li><li><code>Power</code> 选项卡</li><li><code>Intelligent Cooling Engine (ICE)</code>选项</li><li>调成 <code>Better Thermal Performance</code> （更好的散热表现） 或 <code>Full Speed</code>(风扇全速) 默认是安静模式</li></ol><p>调过之后表现还行，待机平均40～50度，最高70～80度，不至于损坏<br>不过作为一个<del>善良的人</del>还是觉得有点过意不去，准备抽空换个散热<br><img src="https://i.loli.net/2021/01/29/9MAaeJiqUHhwu5R.png" alt="4433e37c26299db7b3e3e8f82050cf7645d9c882.png"></p><h2 id="各种坑"><a href="#各种坑" class="headerlink" title="各种坑"></a>各种坑</h2><p>如果你还没入坑，那太好了，一起来看看会遇到什么问题</p><p>一句话</p><blockquote><p>推荐 <code>i3 4330t</code><br>最好是T/S后缀或者i3不带后缀也行<br>核心显卡要保证是<code>英特尔® 核芯显卡 4600</code><br>TDP不要超过60W，不然你就可以用电脑烤肉了:P</p></blockquote><ul><li>CPU最好是<strong>低电压低功耗</strong>的，也就是所谓T后缀或S后缀的。标压的也不是不能用，只不过待机温度偏高。i3 4330在静音模式下高达60℃。bios里选择散热优先，满载时的温度长时间倒也不至于损坏。只是需要斟酌罢了，高频率和低温度不可兼得。实测macOS对频率要求不太高，为了长久大计还是买个 <code>i3 4330t</code> 吧</li><li>CPU核心显卡最好是<code>HD 4600</code>的，听说4400有JPG预览问题，而且比较麻烦。HD 4600简单方便，原生支持，也就贵个十来块，省下好多烦心事。这就是说i3 31xx不合适</li><li>VGA省了吧，买根<code>DisplayPort</code>线，苹果早就抛弃vga接口了（2G网真快）</li></ul><p><strong>如果你的黑苹果休眠后唤醒重启，那么请看<a href="/2021/01/31/Powerstate-error-solution/">这个教程</a></strong></p><p>看看这里方便买CPU<br><strong>Intel Core i3</strong><br><a href="https://ark.intel.com/content/www/cn/zh/ark/products/series/75025/4th-generation-intel-core-i3-processors.html#@Desktop">https://ark.intel.com/content/www/cn/zh/ark/products/series/75025/4th-generation-intel-core-i3-processors.html#@Desktop</a><br><strong>Intel Core i5</strong><br><a href="https://ark.intel.com/content/www/cn/zh/ark/products/series/75024/4th-generation-intel-core-i5-processors.html#@Desktop">https://ark.intel.com/content/www/cn/zh/ark/products/series/75024/4th-generation-intel-core-i5-processors.html#@Desktop</a></p><p><img src="https://i.loli.net/2021/01/29/4MmLWzjuelR1bVZ.png" alt="02db465212d3c374a43c60fa2625cc1caeaab796.png"><br>祝大家玩的愉快</p>]]></content>
    
    <summary type="html">
    
      我使用了一段时间，除了偶尔休眠会panic重启之外，绝对是完美的。完美支持 macOS Big Sur
    
    </summary>
    
    
      <category term="Hackintosh" scheme="https://hiztr.cn/categories/Hackintosh/"/>
    
    
  </entry>
  
  <entry>
    <title>个人博客搭建指南-静态网站托管</title>
    <link href="https://hiztr.cn/2020/06/01/Static-website-build-insturction/"/>
    <id>https://hiztr.cn/2020/06/01/Static-website-build-insturction/</id>
    <published>2020-06-01T11:42:16.000Z</published>
    <updated>2020-06-05T11:33:30.813Z</updated>
    
    <content type="html"><![CDATA[<p>腾讯云出了新的静态网站托管啦，我准备尝试用它来建立一个静态博客</p><span id="more"></span><blockquote><p>长文请配合目录食用，左下角有个⚓️图标，点击可展开目录</p></blockquote><p>大好消息，腾讯云的静态网站托管上线啦</p><p><a href="https://console.cloud.tencent.com/tcb/hosting">https://console.cloud.tencent.com/tcb/hosting</a></p><p>也就是说，现在在国内终于有了比 GitPage 更好的解决方案了。<br>主要表现如下：</p><ul><li>网速更快（物理上更近啊）</li><li>按理说百度可以收录了</li><li>还有免费套餐(大约每月10k访问量)</li></ul><p>总而言之，真香</p><h2 id="注册腾讯云账号"><a href="#注册腾讯云账号" class="headerlink" title="注册腾讯云账号"></a>注册腾讯云账号</h2><p>这就…不用说了吧，顺带实名认证下方便将来买域名什么的</p><h2 id="打开静态网站托管"><a href="#打开静态网站托管" class="headerlink" title="打开静态网站托管"></a>打开静态网站托管</h2><p>在产品里搜索</p><p><img src="https://i.loli.net/2020/06/01/KxS7kOh4fdNJqWp.png" alt="屏幕快照 2020-06-01 下午7.58.23.png"></p><h2 id="创建一个云开发环境"><a href="#创建一个云开发环境" class="headerlink" title="创建一个云开发环境"></a>创建一个云开发环境</h2><p>一开始他会提示你新建云环境，点击</p><p><img src="https://i.loli.net/2020/06/01/p1jCQlrNYz2Tiye.png" alt="屏幕快照 2020-06-01 下午7.59.46.png"></p><p><strong>一定要选择按量计费和免费资源（不然欠费别怪我）</strong></p><h2 id="配置静态网站托管"><a href="#配置静态网站托管" class="headerlink" title="配置静态网站托管"></a>配置静态网站托管</h2><p>得先等云环境初始化好了，刷新一下，点击确定就好啦</p><p><img src="https://i.loli.net/2020/06/01/wSME6HeqfmxhgrB.png" alt="屏幕快照 2020-06-01 下午8.09.06.png"></p><p>依然是慢的要死</p><p>进来是这样的界面</p><p><img src="https://i.loli.net/2020/06/01/EFkhupJB54HOXec.png" alt="屏幕快照 2020-06-01 下午8.43.17.png"></p><h2 id="配置-hexo-博客"><a href="#配置-hexo-博客" class="headerlink" title="配置 hexo 博客"></a>配置 hexo 博客</h2><p>这个和之前的差不多，折叠起来放在下面</p><p>PS: 如果你已经装好了请直接跳到<code>建立本地环境</code>一节</p><div id="content"><h3 id="安装-node-js-并配置"><a href="#安装-node-js-并配置" class="headerlink" title="安装 node.js 并配置"></a>安装 node.js 并配置</h3><p>打开<a href="https://nodejs.org/zh-cn/">官网</a>,无脑下载。</p><p><img src="https://s1.ax1x.com/2020/04/08/GfPH4U.png" alt="nodejs"></p><p>终端执行如下命令，无输出。（切换镜像源，不然卡死你）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h3><p>先建好一个<strong>空的</strong>文件夹，cd 到上一层目录，执行：(注意，windows powershell 会鬼畜，cmd就好)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init 你的文件夹名字</span><br></pre></td></tr></table></figure><h3 id="启动，关闭-hexo"><a href="#启动，关闭-hexo" class="headerlink" title="启动，关闭 hexo"></a>启动，关闭 hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器<code>localhost:4000</code>就能看到了<br>按<code>Ctrl + c</code>退出</p><h3 id="安装一大堆插件"><a href="#安装一大堆插件" class="headerlink" title="安装一大堆插件"></a>安装一大堆插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br><span class="line">npm install hexo-generator-json-content --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>如果你要用 Gitpage，记得不要用太多图片的主题，会很卡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure><p>是cofess的主题，很简洁</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>有两个文件，<code>themes/pure/_config.yml</code>和<code>_config.yml</code>，优先修改第一个</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">pure</span></span><br></pre></td></tr></table></figure><p>重新生成一下，不然不会生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>另外，还要修改诸如作者名、网址、网站名、评论插件等，各个主题皆有不同，请参考 readme 和百度<br>一般会有注释</p><h3 id="写文章，发表"><a href="#写文章，发表" class="headerlink" title="写文章，发表"></a>写文章，发表</h3><h4 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">&quot;文章名称&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">&quot;页面名称&quot;</span> <span class="comment">#新建页面</span></span><br></pre></td></tr></table></figure><p>他会输出一个地址，你打开它就可以编辑了(紫色显示)</p><p><img src="https://s1.ax1x.com/2020/04/08/GfnF8x.png" alt="GfnF8x.png"></p><h4 id="文章格式"><a href="#文章格式" class="headerlink" title="文章格式"></a>文章格式</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">时间</span> <span class="string">xxxx-xx-xx</span> <span class="string">xx:xx:xx</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="comment">#分类，只有一个</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="comment">#标签，可有多个</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span> <span class="comment">#是否显示目录</span></span><br><span class="line"><span class="attr">desciption:</span> <span class="string">&quot;简介，在搜索时可以看到，不要太长&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">文章简介，可以在主页看到</span></span><br><span class="line"><span class="string">&lt;!--</span> <span class="string">more</span> <span class="string">--&gt;</span></span><br><span class="line"><span class="string">正文</span></span><br></pre></td></tr></table></figure><p><strong>友链、分类、标签页面的开启</strong></p><p>不方便说明，百度或看 readme</p><h4 id="发表-注意差别⚠️"><a href="#发表-注意差别⚠️" class="headerlink" title="发表(注意差别⚠️)"></a>发表(注意差别⚠️)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g</span><br><span class="line">$ tcb hosting:deploy public -e 你的envid <span class="comment">#跟刚才一样</span></span><br></pre></td></tr></table></figure></div><h2 id="部署-cloud-base"><a href="#部署-cloud-base" class="headerlink" title="部署 cloud base"></a>部署 cloud base</h2><h3 id="安装-Tencent-cli"><a href="#安装-Tencent-cli" class="headerlink" title="安装 Tencent cli"></a>安装 Tencent cli</h3><p>注意哈，要先装 <code>node.js</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install -g @cloudbase/cli</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tcb -h <span class="comment">#应该有输出</span></span><br></pre></td></tr></table></figure><h3 id="建立本地环境"><a href="#建立本地环境" class="headerlink" title="建立本地环境"></a>建立本地环境</h3><p>首先，cd 到刚才 hexo init 的那一级目录：<br>结构大概如此</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  Web Site <span class="built_in">ls</span></span><br><span class="line">_admin-config.yml config            logs              node_modules      package-lock.json public            <span class="built_in">source</span>            website</span><br><span class="line">_config.yml       db.json           null              package.json      scaffolds         themes</span><br></pre></td></tr></table></figure><h4 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ tcb login</span><br></pre></td></tr></table></figure><p>在弹出的窗口登陆即可</p><h4 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h4><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tcb init public</span><br></pre></td></tr></table></figure><p>参数如下选择，回车确定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  Web Site tcb init public</span><br><span class="line">✔ 选择关联环境 · blog - [blog-1945c4:空]</span><br><span class="line">✔ 请输入项目名称 · website</span><br><span class="line">✔ 选择开发语言 · Node</span><br><span class="line">✔ 选择云开发模板 · Hello World</span><br><span class="line">✔ 创建项目 website 成功！</span><br></pre></td></tr></table></figure><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tcb hosting:deploy public -e 你的envid</span><br></pre></td></tr></table></figure><p>可以这样查看 envid（就是项目名➕一堆字符）</p><p><img src="https://i.loli.net/2020/06/01/7WY9ScAwxdElNjD.png" alt="屏幕快照 2020-06-01 下午8.24.27.png"></p><p>如下结果说明部署成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜  Web Site tcb hosting:deploy public -e blog-1945c4</span><br><span class="line">文件传输中 [==================================================] 100% 0.0s</span><br><span class="line">✔ </span><br><span class="line">部署完成 👉 http://url.url <span class="comment"># 这个就是部署好的地址</span></span><br><span class="line">✔ 文件共计 55 个</span><br><span class="line">✔ 文件上传成功 55 个</span><br><span class="line">✖ 文件上传失败 0 个</span><br></pre></td></tr></table></figure><p>浏览器打开这个网址就能看到了</p><h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p>打开_config.yml</p><p>把<code>url</code>修改为你刚才访问的网址</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://blog-1945c4-1255489341.tcloudbaseapp.com/</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br></pre></td></tr></table></figure><p>重新生成并部署</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g</span><br><span class="line">$ tcb hosting:deploy public -e 你的envid #跟刚才一样</span><br></pre></td></tr></table></figure><p>现在页面链接应该正常了</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>要选择方案为按量计费、免费额度</li><li>要修改网站根目录的 _config.yml 中的url</li><li>部署方式为<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g</span><br><span class="line">$ tcb hosting:deploy public -e 你的envid #跟刚才一样</span><br></pre></td></tr></table></figure></li><li>注意那个箭头啊，$符啊什么的都是终端提示符，别一股脑全粘进去了</li><li>另外，如果你想使用评论或其他的功能，请把url替换掉</li></ul><p>还有，你们可能觉得这个域名长的难以忍受，不过不慌，会介绍自定义域名的。如果你使用<code>hexo d</code>的话还是可以部署到github的，只不过链接会跳转到这里</p><p>如果有问题请评论，我会看到的</p>]]></content>
    
    <summary type="html">
    
      腾讯云出了新的静态网站托管啦，我准备尝试用它来建立一个静态博客
    
    </summary>
    
    
      <category term="Develop" scheme="https://hiztr.cn/categories/Develop/"/>
    
    
      <category term="Website" scheme="https://hiztr.cn/tags/Website/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建—使用图床</title>
    <link href="https://hiztr.cn/2020/05/17/Image-hosting-tips/"/>
    <id>https://hiztr.cn/2020/05/17/Image-hosting-tips/</id>
    <published>2020-05-17T04:00:00.000Z</published>
    <updated>2020-06-05T11:29:39.669Z</updated>
    
    <content type="html"><![CDATA[<p>继续填坑，来说怎么向文章里添加图片</p><span id="more"></span><h2 id="图床简介"><a href="#图床简介" class="headerlink" title="图床简介"></a>图床简介</h2><p>图床就是一个存储图片并向互联网提供这些图片的服务器，一般会使用 cdn 等使访问速度较快。</p><h2 id="为什么要使用图床"><a href="#为什么要使用图床" class="headerlink" title="为什么要使用图床"></a>为什么要使用图床</h2><ol><li>服务器承担不了过大的请求数量</li><li>服务器访问缓慢</li><li>更稳定安全的存储（注意某些并不安全，会突然暴毙）</li></ol><p>在最早的文章中，我选择了使用 Github 的免费托管。众所周知在国内 Github 访问是很慢的，所以不用图床会极大影响加载速度和用户体验。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>首先，介绍下国内使用还算不错的服务商：</p><ul><li>七牛</li><li><a href="https://sm.ms">sm.ms</a></li><li><a href="https://imgurl.org/">imgurl</a></li></ul><p>我现在再用 sm.ms 的，主要是免费还不用注册(最近上传有些慢不知为什么)。</p><h3 id="准备好你要的图片"><a href="#准备好你要的图片" class="headerlink" title="准备好你要的图片"></a>准备好你要的图片</h3><blockquote><p>小技巧：截图快捷键<br>Windows 用户: <code>Windows+Shift+S</code> (Windows 10) 或 <code>PrintScreen</code> 键<br>mac 用户: <code>Command+Shift+4</code> (区域截图) 按一下空格切换到窗口截图</p></blockquote><p>注意，如果网速不好压缩一下也是个好办法。<br>压缩网址<a href="https://tinypng.com">https://tinypng.com</a></p><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><p><img src="https://i.loli.net/2020/05/17/MWXAynGBtc4qLEj.png" alt="屏幕快照 2020-05-17 下午4.51.11.png"></p><p>说的很清楚：把文件拖到这里，或者复制粘贴</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><img src="https://i.loli.net/2020/05/17/aVqkPBilnC8MAh5.png" alt="屏幕快照 2020-05-17 下午4.54.41.png"></p><p>选择 markdown，复制下来插入 markdown 源码即可。注意别粘错了</p><p>看起来像这样</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">提示语</span>](<span class="link">url</span>)</span><br></pre></td></tr></table></figure><p>刷新一下就能用啦</p>]]></content>
    
    <summary type="html">
    
      本文讲解了图床的使用方法和优势
    
    </summary>
    
    
      <category term="Develop" scheme="https://hiztr.cn/categories/Develop/"/>
    
    
      <category term="Website" scheme="https://hiztr.cn/tags/Website/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建—使用 Gitalk</title>
    <link href="https://hiztr.cn/2020/04/09/Gitalk-register-and-use/"/>
    <id>https://hiztr.cn/2020/04/09/Gitalk-register-and-use/</id>
    <published>2020-04-08T23:16:44.000Z</published>
    <updated>2020-06-05T11:28:52.696Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇说了基本的静态博客搭建，这里补充一下评论系统的使用方法。</p><span id="more"></span><h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><p>上一篇文章说过，静态博客就只是一堆 html 页面，并没有后台，自然也不能响应动态请求。而评论需要有存储、响应请求……自然是不能实现。</p><p>然而并不是不能实现，<code>serverless</code>无服务器的技术可以帮我们解决这个难题。Gitalk 是一个 js 插件，能使用Github账号来登陆，并将用户的评论转为 issue 存到仓库里。又剩下了一笔资金是不是。更方便的是它不需要备案就可以直接使用。</p><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>首先你得有个 Github 账号（都用 Gitpage 了怎么就没有 GitHub 账号）<br>其次你的主题最好支持配置 Gitalk，就省的写代码了。<br>类似如下这样</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span> <span class="comment"># gitalk. https://gitalk.github.io/</span></span><br><span class="line">    <span class="attr">owner:</span> <span class="string">HelloWorldZTR</span> <span class="comment">#必须. GitHub repository 所有者，可以是个人或者组织。</span></span><br><span class="line">    <span class="attr">admin:</span> <span class="string">HelloWorldZTR</span> <span class="comment">#必须. GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">HelloWorldZTR.github.io</span> <span class="comment">#必须. GitHub repository.</span></span><br><span class="line">    <span class="attr">ClientID:</span> <span class="comment">#必须. GitHub Application Client ID.</span></span><br><span class="line">    <span class="attr">ClientSecret:</span> <span class="comment">#必须. GitHub Application Client Secret.</span></span><br></pre></td></tr></table></figure><h3 id="注册-OAuth-应用"><a href="#注册-OAuth-应用" class="headerlink" title="注册 OAuth 应用"></a>注册 OAuth 应用</h3><h4 id="你的头像-Settings"><a href="#你的头像-Settings" class="headerlink" title="你的头像- Settings"></a>你的头像- Settings</h4><p><img src="https://i.loli.net/2020/04/09/zojwN7LDA2RyYpP.png" alt="屏幕快照 2020-04-09 上午7.32.10.png"></p><h4 id="点击-Developer-Settings-（最下）"><a href="#点击-Developer-Settings-（最下）" class="headerlink" title="点击 Developer Settings （最下）"></a>点击 Developer Settings （最下）</h4><p><img src="https://i.loli.net/2020/04/09/UxyS34eMpXP6A7E.png" alt="屏幕快照 2020-04-09 上午7.33.15.png"></p><h4 id="选择-OAuth-Apps-并新建一个-OAuth-App"><a href="#选择-OAuth-Apps-并新建一个-OAuth-App" class="headerlink" title="选择 OAuth Apps 并新建一个 OAuth App"></a>选择 OAuth Apps 并新建一个 OAuth App</h4><p><img src="https://i.loli.net/2020/04/09/MEf9PwakbUNvgD7.png" alt="屏幕快照 2020-04-09 上午7.33.38.png"></p><h4 id="填写表格"><a href="#填写表格" class="headerlink" title="填写表格"></a>填写表格</h4><p><img src="https://i.loli.net/2020/04/09/6LhEJAVqUe7WvTk.png" alt="Table"></p><ul><li>Application name: 应用名，用户在使用 Github 账号登陆时可以看到。要可信，明确用途，我是博客评论就写blog comment</li><li>Homepage URL: 博客网址，没得说</li><li>description可以写，也可以不写</li><li>Callback URL：登陆后跳转到的 URL 和博客地址相同即可</li></ul><h3 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h3><p>复制他给你的两个 ID 填写到你的配置文件里（<code>themes/xxx/_config.yml</code>）</p><p><img src="https://i.loli.net/2020/04/09/aSXqwRfn4KNiL2U.png" alt="屏幕快照 2020-04-09 上午7.51.43.png"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span> <span class="comment"># gitalk. https://gitalk.github.io/</span></span><br><span class="line">    <span class="attr">owner:</span> <span class="string">HelloWorldZTR</span> <span class="comment">#必须. GitHub repository 所有者，可以是个人或者组织。</span></span><br><span class="line">    <span class="attr">admin:</span> <span class="string">HelloWorldZTR</span> <span class="comment">#必须. GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">HelloWorldZTR.github.io</span> <span class="comment">#必须. GitHub repository.</span></span><br><span class="line">    <span class="attr">ClientID:</span> <span class="string">xxxxxxxxxxxx</span> <span class="comment">#必须. GitHub Application Client ID.</span></span><br><span class="line">    <span class="attr">ClientSecret:</span> <span class="string">xxxxxxxxxxxxxx</span> <span class="comment">#必须. GitHub Application Client Secret.</span></span><br></pre></td></tr></table></figure><p>重启一下服务器</p><p>应该能看到这样的东西</p><p><img src="https://i.loli.net/2020/04/09/y9NIpMaO356CuHT.png" alt="屏幕快照 2020-04-09 上午7.58.32.png"></p><p>（登陆可能有点慢，刷新一下就不会显示 <code>Network Error</code> 了）</p><p>发一条评论，应该可以看见 issue 了</p><p><img src="https://i.loli.net/2020/04/09/R4tqaDrEop2FX3Q.png" alt="屏幕快照 2020-04-09 上午8.00.54.png"></p>]]></content>
    
    <summary type="html">
    
      如何在 GitPage 使用评论
    
    </summary>
    
    
      <category term="Develop" scheme="https://hiztr.cn/categories/Develop/"/>
    
    
      <category term="Website" scheme="https://hiztr.cn/tags/Website/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建指南</title>
    <link href="https://hiztr.cn/2020/04/08/WebSite-Build-instruction/"/>
    <id>https://hiztr.cn/2020/04/08/WebSite-Build-instruction/</id>
    <published>2020-04-08T08:29:02.000Z</published>
    <updated>2020-06-05T11:33:53.759Z</updated>
    
    <content type="html"><![CDATA[<p>让我们来聊一聊关于搭建静态个人博客的一些小事</p><span id="more"></span><article class="panel panel-default hover-shadow hover-grow" itemscope="" itemtype="http://schema.org/BlogPosting">  <div class="panel-body">    <!-- <div class="article-meta">      <time datetime="2020-04-07T05:45:51.000Z" itemprop="datePublished"></time>    </div> -->    <h3 class="article-title" itemprop="name">      <a class="article-link" href="/tags/Website/">建站指南</a>      <p>我写的一系列指南，让你能快速建立一个和这个网站一样简洁有用的个人博客站点</p>    </h3>  </div>  <!-- <div class="panel-footer">            </div> --></article><p>⚠️！！如果你想建一个更便捷有用的网站，建议查看静态网站部署的那一篇</p><blockquote><p>长文请配合目录食用，左下角有个⚓️图标，点击可展开目录</p></blockquote><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>这个纯粹是说给自己看的，相信大家既然有搭建自己博客的想法，肯定就知道为什么了。首先，大多数博客网站像<code>CSDN</code>、<code>博客园</code>啥的限制很多，个性化很少，像新浪博客直接就 pass<br>掉。其次，纯粹是一种程序员的热情，谁都不想让自己的心血白白浪费，自然需要一个 decent 的地方来挥洒自己的热情。最后，不论谁都会有很多事情想记录和分享出来。<br>综上，搭建一个个人博客原因很充足了吧？幸运的事我们不需要花很多时间或精力，大约需要 100 元/年 的开销和 1 小时左右的时间。(如果你不要域名甚至可以不花钱)</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>纯当科普，大佬请跳过。<br>这类网站有两种，静态和动态。静态就是不需要服务器的形式，直接渲染成 <code>html</code>，交互操作（评论，访问量）就全靠 <code>js(javascript)</code>了。最出名的有<br><code>hexo</code>、<code>Jekyll</code>、<code>Hugo</code>之类的。通常不需要多少服务器开销，功能基本够用。<br>再是动态，不得不说的就是<code>wordpress</code>,这种网站就要用真正的服务器了，要有数据库、web<br>server……就是那些<code>php</code>,<code>jsp</code>,<code>asp</code>写的网站。当然就得为服务器出把血了（参考价1000元/年），好处就是有酷炫功能（登陆、论坛什么的）</p><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><p>我们这里不说真正的服务器，只搞静态的网站（穷就完事了）<br>跟随大众，选（白嫖） GitPage 没错。</p><h3 id="GitPage"><a href="#GitPage" class="headerlink" title="GitPage"></a>GitPage</h3><p>优点：完全免费、老牌稳定<br>缺点：国内访问慢、百度不收录</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>我的博客就在 Github 上，你需要：</p><ul><li>注册一个 GitHub 账号</li><li>创建一个仓库，名叫<code>你的账号.github.io</code>，往里面上传一个<code>index.html</code></li><li>访问<code>https://你的账号.github.io</code>就能看到你的 index.html 了</li></ul><p>访问慢、百度不收录：<br>随便办一个 CDN（内容分发网络）（10 元/年），后面详述。</p><h3 id="CodingPage"><a href="#CodingPage" class="headerlink" title="CodingPage"></a>CodingPage</h3><p>被腾讯收购后成了静态网站托管，看似要收费实际不会收费。有空我去试试。<br><a href="https://cloud.tencent.com/product/wh">https://cloud.tencent.com/product/wh</a></p><h3 id="OBS-对象存储"><a href="#OBS-对象存储" class="headerlink" title="OBS 对象存储"></a>OBS 对象存储</h3><p>如果你都不想用，可以办一个<a href="https://www.aliyun.com/product/oss?utm_content=se_1005017193">对象存储服务</a>(本质上原理相同)，总而言之可行而不好用。</p><h2 id="博客本体"><a href="#博客本体" class="headerlink" title="博客本体"></a>博客本体</h2><p>最重要的部分，即<code>hexo</code>、<code>Jekyll</code>、<code>Hugo</code>之类的，下面详细记述 hexo 的安装过程。</p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li>注册一个 GitHub 账号</li><li>创建一个仓库，名叫<code>你的账号.github.io</code></li></ul><h3 id="安装-node-js-并配置"><a href="#安装-node-js-并配置" class="headerlink" title="安装 node.js 并配置"></a>安装 node.js 并配置</h3><p>打开<a href="https://nodejs.org/zh-cn/">官网</a>,无脑下载。</p><p><img src="https://s1.ax1x.com/2020/04/08/GfPH4U.png" alt="nodejs"></p><p>终端执行如下命令，无输出。（切换镜像源，不然卡死你）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h3><p>打开官网，无脑下载（linux,mac不用下载，系统自带）</p><p>安装一路 Yes</p><h3 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h3><p>先建好一个<strong>空的</strong>文件夹，cd 到上一层目录，执行：(注意，windows powershell 会鬼畜，cmd就好)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init 你的文件夹名字</span><br></pre></td></tr></table></figure><h3 id="启动，关闭-hexo"><a href="#启动，关闭-hexo" class="headerlink" title="启动，关闭 hexo"></a>启动，关闭 hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器<code>localhost:4000</code>就能看到了<br>按<code>Ctrl + c</code>退出</p><h3 id="安装一大堆插件"><a href="#安装一大堆插件" class="headerlink" title="安装一大堆插件"></a>安装一大堆插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br><span class="line">npm install hexo-generator-json-content --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>如果你要用 Gitpage，记得不要用太多图片的主题，会很卡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure><p>是cofess的主题，很简洁</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>有两个文件，<code>themes/pure/_config.yml</code>和<code>_config.yml</code>，优先修改第一个</p><p>在<code>_config.yml</code>文末，修改如下(repo一行自己修改为仓库的ssh)，这样他会直接提交到你的仓库里。</p><p><img src="https://s1.ax1x.com/2020/04/08/Gfiebt.png" alt="Gfiebt.png"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">git@github.com:HelloWorldZTR/HelloWorldZTR.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>顺便改个主题</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">pure</span></span><br></pre></td></tr></table></figure><p>重新生成一下，不然不会生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>另外，还要修改诸如作者名、网址、网站名、评论插件等，各个主题皆有不同，请参考 readme 和百度</p><h3 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h3><p>借用一下思否的图<br>生成ssh公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;邮箱地址&quot;</span></span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&#x27;上面的邮箱&#x27;</span></span><br><span class="line"><span class="comment"># 三次回车 =&gt; 密码为空</span></span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/08/GfeWm4.jpg" alt="GfeWm4.jpg"></p><p><img src="https://s1.ax1x.com/2020/04/08/Gfeh79.jpg" alt="Gfeh79.jpg"><br>把刚才的cat输出拷贝粘贴到框里</p><p><img src="https://s1.ax1x.com/2020/04/08/Gfeofx.jpg" alt="Gfeofx.jpg"></p><h3 id="写文章，发表"><a href="#写文章，发表" class="headerlink" title="写文章，发表"></a>写文章，发表</h3><h4 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">&quot;文章名称&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">&quot;页面名称&quot;</span> <span class="comment">#新建页面</span></span><br></pre></td></tr></table></figure><p>他会输出一个地址，你打开它就可以编辑了(紫色显示)</p><p><img src="https://s1.ax1x.com/2020/04/08/GfnF8x.png" alt="GfnF8x.png"></p><h4 id="文章格式"><a href="#文章格式" class="headerlink" title="文章格式"></a>文章格式</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">时间</span> <span class="string">xxxx-xx-xx</span> <span class="string">xx:xx:xx</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="comment">#分类，只有一个</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="comment">#标签，可有多个</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span> <span class="comment">#是否显示目录</span></span><br><span class="line"><span class="attr">desciption:</span> <span class="string">&quot;简介，在搜索时可以看到，不要太长&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">文章简介，可以在主页看到</span></span><br><span class="line"><span class="string">&lt;!--</span> <span class="string">more</span> <span class="string">--&gt;</span></span><br><span class="line"><span class="string">正文</span></span><br></pre></td></tr></table></figure><p><strong>友链、分类、标签页面的开启</strong></p><p>不方便说明，百度或看 readme</p><h4 id="发表"><a href="#发表" class="headerlink" title="发表"></a>发表</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g <span class="comment"># 重新生成</span></span><br><span class="line">hexo d <span class="comment"># 发布到 Github</span></span><br></pre></td></tr></table></figure><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>有名网址，不想输<code>xxx.github.io</code>，还想再个性化点？花钱买个域名就好啦。</p><p>不想用分配的域名，自己去 <a href="https://sg.godaddy.com/zh">狗爹网</a> 或国内平台办理即可。不同域名价格差很大，记得货比三家～</p><p>然后在 <a href="https://cloud.tencent.com/product/cns">DNSpod</a> 中配一下即可，如果有CDN要关联。具体做法可以百度，我马上就去填坑</p><h2 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h2><p>如果你想用 Gitpage 的话，这点钱花的有必要。具体做法不多说，记得是 <strong>CDN 内容分发网络</strong>，套餐选 <strong>按需计费</strong> 即可，每年 50G 对博客站完全足够。<br>大家可以货比三家，好好算算价钱。</p><p>我会详细介绍域名和 CDN 的使用方法。</p><h2 id="其他事项"><a href="#其他事项" class="headerlink" title="其他事项"></a>其他事项</h2><p>你需要去搜索引擎提交你的网站，不然没有流量</p><h2 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h2><p>见这里<a href="https://helloworldztr.github.io/2020/04/09/Gitalk-register-and-use/">https://helloworldztr.github.io/2020/04/09/Gitalk-register-and-use/</a></p>]]></content>
    
    <summary type="html">
    
      让我们来聊一聊关于搭建静态个人博客的一些小事和具体方法
    
    </summary>
    
    
      <category term="Develop" scheme="https://hiztr.cn/categories/Develop/"/>
    
    
      <category term="Website" scheme="https://hiztr.cn/tags/Website/"/>
    
  </entry>
  
  <entry>
    <title>黑苹果 ATI HD 显卡通用驱动方式及 HD 5450 的驱动</title>
    <link href="https://hiztr.cn/2020/03/10/Hackintosh-ATI-Driver/"/>
    <id>https://hiztr.cn/2020/03/10/Hackintosh-ATI-Driver/</id>
    <published>2020-03-10T09:37:32.000Z</published>
    <updated>2020-05-26T05:21:53.765Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章将不采用任何付费的 kexts，用苹果的原生机制驱动我们的显卡。</p><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>非常感谢<a href="http://blog.csdn.net/wr132/article/details/54837303">这位博主的博客</a>不仅启发了我，而且解决了我的问题<br>转载<a href="http://blog.csdn.net/wr132/article/details/54837303">http://blog.csdn.net/wr132/article/details/54837303</a><br>我个人的显卡是<code>HD 5450</code>。这篇文章将不采用任何付费的 kexts，用苹果的原生机制驱动我们的显卡。<br>现在我整理了相关资料，希望能帮助大家</p></blockquote><p>注意，你需要使用 ATI HD 显卡， CLover 引导</p><blockquote><p>另外，这里只写了 HD 5xxx/6xxx 的相关信息，若果是其他的显卡可能需要爬帖找找资料，但是希望这篇文章可以启发一下 :D<br>还有，如果你在用 HD 5xxx/6xxx 显卡装 Mojave 或 Catalina ，请老老实实换回 High Sierra，或者扔了显卡，去深水宝淘一个<a href="https://blog.daliansky.net/Mojave-Hardware-Support-List.html">黑苹果免驱卡</a>（这些显卡不支持新 Metal，根本就不能用，从 HD 7xxx 才支持）</p></blockquote><h2 id="显卡不正常驱动的表现"><a href="#显卡不正常驱动的表现" class="headerlink" title="显卡不正常驱动的表现"></a>显卡不正常驱动的表现</h2><p>在黑苹果过程中，驱动显卡可谓最重要的一步了，因为没有驱动，你的电脑会成这样：</p><ul><li><code>5M</code> 的显存 (虽然跟我的 512M 差不多)</li><li>显卡型号不能显示</li><li><code>1280x720</code> 的白内障分辨率</li><li>卡成 xxx 的启动器</li><li>没有透明等炫酷特效</li><li>撕裂严重</li></ul><p>如果你上面的问题都没有遇到，那么就恭喜你已经驱动好显卡了，或者苹果本身就支持你这张显卡。这也引出了我们操作的原理。</p><h2 id="操作原理及具体操作"><a href="#操作原理及具体操作" class="headerlink" title="操作原理及具体操作"></a>操作原理及具体操作</h2><p>这里我们将通过 Clover 注入显卡虚假 ID ，让系统认为安装的显卡是原生支持的，从而驱动。这里只列出了 ATI 显卡，不过其他的 A卡或许也可以通过这种方法驱动。</p><p>我将把 ID 表放在文末</p><h3 id="挂载-EFI-分区"><a href="#挂载-EFI-分区" class="headerlink" title="挂载 EFI 分区"></a>挂载 EFI 分区</h3><p>这里需要用到 Clover 做引导，并下载安装 <code>Clover Configurator</code></p><p>打开 Clover Configurator，选择挂载分区。<br><img src="https://img-blog.csdnimg.cn/20200311072018758.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="mount"></p><p>挂载你启动用的 EFI 分区，输入密码。</p><h3 id="打开配置文件"><a href="#打开配置文件" class="headerlink" title="打开配置文件"></a>打开配置文件</h3><p>点击最左下角的图标，导入你的 <code>config.plist</code></p><p><img src="https://img-blog.csdnimg.cn/20200311072314138.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="config"><br>(下面开始可能会有风险，推荐全部看完后再决定尝试)</p><h3 id="修改-fake-ID"><a href="#修改-fake-ID" class="headerlink" title="修改 fake ID"></a>修改 fake ID</h3><p>按 <code>command + 空格</code>呼出菜单,打开<code>System Information.app</code><br>选择<code>图形卡/显示器</code>，里面有设备 ID，记下来<br><img src="https://img-blog.csdnimg.cn/20200311072508267.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="information"><br>我这里的显卡 ID 是<code>0x68e0</code> (设备 ID 和虚假 ID 一样，因为我已经注入成功了，但是本来不是这样的，本来是0x68E1)<br>在文末的支持对照表内找到<strong>型号、ID 相似</strong>的显卡，复制下来<strong>表中的</strong>ID<br>我在这里找到的虚假 ID 是<code>0x68E01002</code> (5470m,虽然是移动显卡但可以正常驱动)<br>非常巧，5470m配合我的<code>i5-2400</code>刚好组合成了imac mid2011的配置（imac12,2），顺带也可以把smbios注入进去。</p><h3 id="注入显卡"><a href="#注入显卡" class="headerlink" title="注入显卡"></a>注入显卡</h3><p>在 Clover Configurator 中选择<code>设备设置</code>栏，在仿冒 ID 里 ATI 中写上虚假 ID<br><img src="https://img-blog.csdnimg.cn/20200311072948518.jpeg" alt="在这里插入图片描述"></p><p>再转到<code>显卡设置</code>栏，钩上<code>注入ATI/AMD 显卡</code>选项，在 <code>FB名称</code>中选择你那个系列的名称。<br><img src="https://img-blog.csdnimg.cn/20200311073444967.png" alt="选项"></p><p>这里有点问题，具体选哪个 FB 取决于你显卡的接口类型，本来应该按照那位博主的博客是该选 Eulemur 的，但最后还选了 Baboon<br>这里可以使用<code>AMD Framebuffer Utility</code>来选择 FB，但事实证明瞎猜也是可行的方法（但是等你看完了再去猜）。</p><p>点击最左下角的保存文件按钮</p><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>我按照那位博主的方法，成功驱动了显卡，但当我一重启，居然黑屏了。<br>我发现系统正常启动，但是显卡没有输出。经过一番查询、翻贴，发现是 FB 的问题。<br><strong>如果你也出现了黑屏，请先别着急放弃：</strong></p><p>在启动之前选择 Option<br><img src="https://img-blog.csdnimg.cn/2020031107425267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打开Graphics Injector<br><img src="https://img-blog.csdnimg.cn/20200311074327212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>再把 Inject ATI 的钩去掉，就可以正常启动了，然后再重复以上步骤，修改 FB<br>或者，你可以直接在 CLover 中 FB config 输入FB 名。<br><img src="https://img-blog.csdnimg.cn/20200311074453127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>最后说一句，黑苹果要的是耐心，当然你可以不挨个尝试 FB 名称，而直接注入 FB， 但是由于 AMD Framebuffer Utility 貌似找不到，所以这种方法反倒是节省了时间。一句话，干他就完事了。</p><p>截图为证<br><img src="https://img-blog.csdnimg.cn/20200311075524168.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>这里说说我为什么不能使用那个博主的 FB 驱动 HD 5450<br>因为我的显卡是 DDVI 接口的，可以分出两个 VGA<br>所以 FB 是Baboon（据推测）<br>如果大家的也是dell 的 OEM 卡，也是 DDVI 的，直接照着这个做就行。若不是，可能就得花时间挨个尝试了。<br>最后祝大家早日吃上黑苹果:P</p><h2 id="ID-列表"><a href="#ID-列表" class="headerlink" title="ID 列表"></a>ID 列表</h2><p>这里列出的是来自百度问答的 ID 表，也存起来防吞。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">ATI5系列全部ID</span><br><span class="line">0x68981002 5870</span><br><span class="line">0x68991002 5850</span><br><span class="line">0x68E01002 5470m 6370m为68E4//8.22更新</span><br><span class="line">0x68E11002 5430/5450/5430m</span><br><span class="line">0x68D81002 5670</span><br><span class="line">0x68C01002 5730m 6570m</span><br><span class="line">0x68C11002 5650m 6550m</span><br><span class="line">0x68D91002 5630</span><br><span class="line">0x68B81002 5770</span><br><span class="line">0x68B01002 5870m ?</span><br><span class="line">0x68B11002 未找到 很有可能是5700Series或5800m Series</span><br><span class="line">0x68A01002 5870m</span><br><span class="line">0x68A11002 5800m Series</span><br><span class="line">ATI6系列全部ID</span><br><span class="line">0x67681002 CAICOS GL PRO(专业卡)</span><br><span class="line">0x67701002 6400 series</span><br><span class="line">0x67791002 6450</span><br><span class="line">0x67601002 6470m</span><br><span class="line">0x67611002 6430m</span><br><span class="line">0x67501002 6570</span><br><span class="line">0x67581002 6670</span><br><span class="line">0x67591002 6570</span><br><span class="line">0x67401002 6730m</span><br><span class="line">0x67411002 6650m 6625m/7610m</span><br><span class="line">0x67451002 未找到 很有可能是6600m/6700m Series或6600Series</span><br><span class="line">0x67381002 6870</span><br><span class="line">0x67391002 6850</span><br><span class="line">0x67201002 6990m</span><br><span class="line">0x67221002 BARTS GL2 (专业卡)</span><br><span class="line">0x67181002 6970</span><br><span class="line">0x67191002 6950</span><br><span class="line">0x68401002 7670m</span><br><span class="line">0x68411002 7500m/7600m series</span><br><span class="line">0x67041002 CAYMAN GL PRO (专业卡)</span><br><span class="line">AMD加速剂驱动</span><br><span class="line">AMDBartsGraphicsAccelerator</span><br><span class="line">0x67381002 6870</span><br><span class="line">0x67391002 6850 6790可替换这个ID</span><br><span class="line">0x67201002 6900m</span><br><span class="line">0x67221002 BARTS GL2 (专业卡)</span><br><span class="line">AMDCaicosGraphicsAccelerator</span><br><span class="line">0x67681002 CAICOS GL PRO(专业卡)</span><br><span class="line">0x67701002 6400 series</span><br><span class="line">0x67791002 6450</span><br><span class="line">0x67601002 6470m</span><br><span class="line">0x67611002 6430m</span><br><span class="line">AMDCaymanGraphicsAccelerator</span><br><span class="line">0x67181002 6970</span><br><span class="line">0x67191002 6950</span><br><span class="line">0x67041002 CAYMAN GL PRO (专业卡)</span><br><span class="line">AMDCedarGraphicsAccelerator</span><br><span class="line">0x68E01002 5470m 5450/6370等卡替换这个ID</span><br><span class="line">AMDCypressGraphicsAccelerator</span><br><span class="line">0x68981002 5870</span><br><span class="line">0x68991002 5850</span><br><span class="line">AMDJuniperGraphicsAccelerator</span><br><span class="line">0x68B01002 5800m Series</span><br><span class="line">0x68B11002 未找到很有可能是5700Series或5800m Series</span><br><span class="line">0x68A01002 5870m</span><br><span class="line">0x68A11002 5800m Series</span><br><span class="line">0x68B81002 5770 5750/6770/6750可在这替换ID</span><br><span class="line">AMDLombokGraphicsAccelerator</span><br><span class="line">0x68401002 6700m series</span><br><span class="line">0x68411002 6600m series</span><br><span class="line">AMDRedwoodGraphicsAccelerator</span><br><span class="line">0x68D81002 5670</span><br><span class="line">0x68C01002 5730m 6570m</span><br><span class="line">0x68C11002 5650m 6550m</span><br><span class="line">0x68D91002 5630</span><br><span class="line">AMDTurksGraphicsAccelerator</span><br><span class="line">0x67501002 6570</span><br><span class="line">0x67581002 6670</span><br><span class="line">0x67591002 6570</span><br><span class="line">0x67401002 6700m series</span><br><span class="line">0x67411002 6600m series</span><br><span class="line">0x67451002 未找到 很有可能是6600m/6700m Series或6600Series</span><br></pre></td></tr></table></figure><p>我们要通过操作，注入以下支持显卡的 ID：(不一定百分百准确，笔记本显卡不一定真的支持)</p><p><strong>HD 台式机原生显卡</strong> |  <strong>HD 笔记本原生显卡</strong>(m)</p><table><thead><tr><th>名称</th><th>ID</th><th>名称</th><th>ID</th></tr></thead><tbody><tr><td>5630</td><td>0x68D91002</td><td>5430m</td><td>0x68E11002</td></tr><tr><td>5670</td><td>0x68D81002</td><td>5470m</td><td>0x68E01002</td></tr><tr><td>5770</td><td>0x68B81002</td><td>5650m</td><td>0x68C11002</td></tr><tr><td>5850</td><td>0x68991002</td><td>5730m</td><td>0x68C01002</td></tr><tr><td>5870</td><td>0x68981002</td><td>5800m series</td><td>0x68A11002</td></tr><tr><td>6450</td><td>0x67791002</td><td>6470m</td><td>0x67601002</td></tr><tr><td>6570</td><td>0x67501002</td><td>6600m series</td><td>0x68411002</td></tr><tr><td>6670</td><td>0x67581002</td><td>6700m series</td><td>0x68401002</td></tr><tr><td>6850</td><td>0x67391002</td><td>6900m</td><td>0x67201002</td></tr><tr><td>6870</td><td>0x67381002</td><td>7500m/7600m</td><td>0x68411002</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">移动版原生支持的有：</span><br><span class="line">5系列:5430m、5470m、5650m、5730m、5800m 系列（除了5870m之外，其他5800m系列的具体ID我并没有查到，如果知道的话请补充）</span><br><span class="line">6系列: 6470m、6600m series、6700m series、6900m、7500m/7600m series（具体型号我查不到，希望知道的童鞋补充）</span><br><span class="line">而6550m和6570m完全是5650m和5730m的马甲卡，ID都是一样的，对系统来说完全没有区别。</span><br><span class="line">笔记本原生支持不等于免驱，继续往下看吧。</span><br><span class="line">台式机的话：</span><br><span class="line">桌面卡可以原生支持的有</span><br><span class="line">5630 5670 5770 5850 5870</span><br><span class="line">6450 6570 6670 6850 6870</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      这篇文章将不采用任何付费的 kexts，用苹果的原生机制驱动我们的显卡。
    
    </summary>
    
    
      <category term="Hackintosh" scheme="https://hiztr.cn/categories/Hackintosh/"/>
    
    
  </entry>
  
  <entry>
    <title>Logistic Regression 的通俗解释</title>
    <link href="https://hiztr.cn/2020/03/05/Simple-explain-to-logistic-regrssion/"/>
    <id>https://hiztr.cn/2020/03/05/Simple-explain-to-logistic-regrssion/</id>
    <published>2020-03-05T01:23:52.000Z</published>
    <updated>2020-05-26T05:21:16.281Z</updated>
    
    <content type="html"><![CDATA[<p>最近开始学习机器学习，了解了Logistic Regression 的原理。我个人认为，Logistic Regression 是机器学习最基础的模型，它诠释了机器学习的基本原理。</p><span id="more"></span><h1 id="Logistic-Regression-Logistic-回归-的通俗解释"><a href="#Logistic-Regression-Logistic-回归-的通俗解释" class="headerlink" title="Logistic Regression (Logistic 回归) 的通俗解释"></a>Logistic Regression (Logistic 回归) 的通俗解释</h1><p>最近开始学习机器学习（怎么感觉这句话怪怪的），了解了Logistic Regression 的原理。我个人认为，Logistic Regression 是机器学习最基础的模型，它诠释了机器学习的基本原理</p><p>先来一张经典的图</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly90aW1nc2EuYmFpZHUuY29tL3RpbWc_aW1hZ2UmcXVhbGl0eT04MCZzaXplPWI5OTk5XzEwMDAwJnNlYz0xNTgzMzgyMjgyMTMyJmRpPWQ5YTU4MmU3NTZkYTA1Nzc1NGQwNWE2MDIzNGIwNDYxJmltZ3R5cGU9MCZzcmM9aHR0cCUzQSUyRiUyRmltYWdlcy5jbmJsb2dzLmNvbSUyRmNuYmxvZ3NfY29tJTJGamNsaWFuOTElMkYxMTQ1NjQ2JTJGb19sci5wbmc?x-oss-process=image/format,png" alt="Logistic Regression"></p><h2 id="Logistic-Regression-的目的"><a href="#Logistic-Regression-的目的" class="headerlink" title="Logistic Regression 的目的"></a>Logistic Regression 的目的</h2><p>我们先忘了上面那张图，来看一张干净简单一点的：（纯手画有点丑）</p><p><img src="https://i.loli.net/2020/03/05/ogU5PGBlwIe9mYb.png" alt="logistic.png"></p><p>这个过程很简单，便是<strong>根据已有的参数给出一个答案</strong></p><p>我们先来看一下这里面的参数：</p><ul><li>x1 和 x2 ：输入的参数</li><li>w1 和 w2 ：权重（先不用管）</li><li>b ：biase（也不用管）</li></ul><p>我们再来更形象地描述一下：</p><p>比方说你有一个房子，有两个属性：<strong>房屋面积 x1 ，卧室数量 x2</strong> （大佬给出的例子）<br>你现在要通过上图的方法，给出你对这个房子的判断：这是不是个好房子</p><p>虽然这个例子主观性过强，但我们假设只要 x1 x2 一定，这个房子就是好房子</p><p>总结一下：<br>输入 x1  x2<br>输出 一个判断 y </p><h2 id="Forward-Propagation-正向传播"><a href="#Forward-Propagation-正向传播" class="headerlink" title="Forward Propagation 正向传播"></a>Forward Propagation 正向传播</h2><p>我们现在讨论的东西，是关于如何给出判断的，图中已经给出了，相信很容易看懂。</p><p>我再写一遍：<code>z = w1*x1 + w2*x2 + b</code><br><code>y = σ(z)</code></p><p>但他们都是什么意思呢？</p><p>x1 x2 我们已经知道了，但是w1 w2表示了什么呢？<br>学过OI的可能知道<code>w</code>是Weight的缩写，译为<code>权重</code>。你可以想象，如果房屋面积 x1 对我很重要，那我就让 x1 乘上一个很大很大的数 w1，那么它就会对最终的值产生更大的影响</p><p>哪b呢？<br><code>b</code>是biase的缩写，译作<code>偏差</code>。很容易理解，如果你的预测总是差了0.00001，那么加上个0.00001不久一劳永逸了么</p><p>总结一下：<br>w ： 控制对应 x 对结果的影响<br>b ： 微调结果</p><p><code>σ(z)</code>是啥呢？</p><p>来张<code>sigmoid</code>函数的靓照</p><p><img src="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2559976033,3031253701&fm=26&gp=0.jpg" alt="sigmoid"></p><p>有点感觉了没有？它把 y 的值切成了两部分 <code>0 ~ 0.5</code> 和 <code>0.5 ~ 1</code>, 分别对应着 z 中 &lt;0 和&gt;0 的范围。<br>所以<code>σ(z)</code>的作用：把 z 的值转换为判断</p><p>σ(z)&gt;0.5 时 判断为真（当然假也行）<br>σ(z)&lt;0.5 时 判断为假（同上）</p><h2 id="Backward-Propagation-反向传播"><a href="#Backward-Propagation-反向传播" class="headerlink" title="Backward Propagation 反向传播"></a>Backward Propagation 反向传播</h2><p>刚才我们解释了怎么用正确的 w 和 b 来判断，但是它们是怎么来的？<br>……靠蒙的你信吗……</p><p>一开始，我们的 w 和 b 都取的是随机数，当然不能给出完全正确的答案。所以呢，我们需要微调 w 和 b ，让最终结果向真正的 y 靠拢。（注意这个图中 y 成了 a ，因为不是最终答案）</p><p><img src="https://i.loli.net/2020/03/05/vGZur9zQAlsNYTj.png" alt="pic2.png"></p><p>下面将是本文中最吓人的部分<del>请洗把脸再看</del>（实际上你不需要过多的了解）</p><p>我们既然要让结果向真正的 y 靠拢，就需要一个函数来判断它的偏差，这里就轮到 <code>Loss</code> 函数登场了。（图中最后一个方框的 L ）由于方法众多，公式冗长，你可以将它看作方差<code>(y-a)^2</code></p><p>知道了目标，具体的靠拢方法就要请到<code>梯度下降法</code>了（当然还有更多[转载自博客]）</p><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583389958103&di=df9df6b429f6dbbe7a2672dc90d17eb3&imgtype=0&src=http%3A%2F%2Fstatic.leiphone.com%2Fuploads%2Fnew%2Farticle%2F740_740%2F201705%2F59267cf6410cc.png%3FimageMogr2%2Fformat%2Fjpg%2Fquality%2F90" alt="梯度下降"></p><p>是不是挺像下山？我们的目标是 Loss 最小（J 函数是全局的 Loss），求出最小，即使是局部最小，也对我们有极大帮助。</p><p>等一下，我们是不是只求出了 Loss 最小，但是 w 和 b 还不知道呢。这时候就需要导数了。当然我们可以不知道，我觉得就是一个神奇的规律，建立在 Loss 和 w 、b 之间。这样，运用那种我们不太熟悉的神奇规律，就能优化 w 和 b 的值了。这就是机器学习最重要的一步 Optimize （优化）。</p><p>现在，我们已经万事俱备，只欠东风了。现在机器已经知道了学习方法，就是时候给它<del>灌教辅资料</del>了。</p><h2 id="Training-训练"><a href="#Training-训练" class="headerlink" title="Training 训练"></a>Training 训练</h2><p>这里不必多说，机器学习总是建立在大数据之上的，没有大数据的支持，机器学习的存在就没有意义。<br>现在假设我们拥有很多很多组房屋的数据 x1, x2，和你对它们的看法 y={0, 1}。<br>你便可以将它们灌给机器，执行一次正向传播，得出偏差之后，再进行一次反向传播，优化 w 和 b。</p><h2 id="Test-测试"><a href="#Test-测试" class="headerlink" title="Test 测试"></a>Test 测试</h2><p>当你把它们都灌给机器后，你已经得到了<strong>近似</strong>完美的 w 和 b，现在，你只要输入未知的的 x，<br>你就能得到<strong>近似</strong>正确的 y。</p><p>好啦，写到这里差不多就这样了，原理从中可以看出，但具体的推导和向量化优化以及跟优化的激活函数，还需要进一步的学习。</p><p>如果你觉得我文中有不妥或错误，欢迎跟我交流</p><h2 id="图形上的意义"><a href="#图形上的意义" class="headerlink" title="图形上的意义"></a>图形上的意义</h2><p><img src="https://i.loli.net/2020/03/05/AeTaYH6XCEWhjKt.png" alt="image.png"></p><p>如图，圈点代表着好房子，叉点代表着不好的房子</p><p>我们求出的，实际是好房子与不好房子的分界线（蓝线）</p><p>我们这里解决的是一个二分分类的问题，实际上也是机器学习最基础的也是最早的问题。当然也比较有意思。</p>]]></content>
    
    <summary type="html">
    
      最近开始学习机器学习，了解了Logistic Regression 的原理。我个人认为，Logistic Regression 是机器学习最基础的模型，它诠释了机器学习的基本原理。
    
    </summary>
    
    
      <category term="Other" scheme="https://hiztr.cn/categories/Other/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring Boot 注入静态变量</title>
    <link href="https://hiztr.cn/2020/03/04/Static-Inject-in-Springboot/"/>
    <id>https://hiztr.cn/2020/03/04/Static-Inject-in-Springboot/</id>
    <published>2020-03-04T13:00:30.000Z</published>
    <updated>2020-05-19T09:04:52.965Z</updated>
    
    <content type="html"><![CDATA[<p>你承受过NullPointerException的痛苦吗？Spring Boot的静态变量注入使我体会到了生命的意义（手动滑稽）</p><span id="more"></span><p>如果你曾经试过如下的一段代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;database.driver&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br></pre></td></tr></table></figure><p>如果程序鲁棒性不好，你便会得到一个<code>NullPointerException</code><br>反正是不能达到你想要的目的，给静态变量赋值。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol><li><p>用一个非静态的变量当中介，像这样</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;database.driver&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String _driver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br></pre></td></tr></table></figure><p> 然后在构造函数中将_driver赋给driver即可</p></li><li><p>写一个<code>non-static</code>的set方法，像酱紫</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseDao</span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDriver</span><span class="params">(<span class="meta">@Value(&quot;$&#123;database.driver&#125;&quot;)</span> String driver)</span> &#123;</span><br><span class="line">        BaseDao.driver = driver;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>set方法一定是non-static的</li><li>一定要小心加载顺序，static代码块不要随便写，不然又是<code>NullPointerException</code></li></ol>]]></content>
    
    <summary type="html">
    
      你承受过NullPointerException的痛苦吗？Spring Boot的静态变量注入使我体会到了生命的意义（手动滑稽）
    
    </summary>
    
    
      <category term="Develop" scheme="https://hiztr.cn/categories/Develop/"/>
    
    
      <category term="java" scheme="https://hiztr.cn/tags/java/"/>
    
      <category term="springboot" scheme="https://hiztr.cn/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>Java仿制GUI系统控制台</title>
    <link href="https://hiztr.cn/2020/03/04/Make_a_gui_in_java/"/>
    <id>https://hiztr.cn/2020/03/04/Make_a_gui_in_java/</id>
    <published>2020-03-04T13:00:00.000Z</published>
    <updated>2020-06-05T11:30:25.933Z</updated>
    
    <content type="html"><![CDATA[<p>在使用Java编程的时候，你可能会厌倦那个黑色的框框控制台，然而，在你使用GUI时，有些时候又会怀念那个框框。我现在便遇到了这样的一个情况，需要仿制一个系统控制台来显示系统输出(<code>System.out</code>和<code>System.err</code>)，分开显示。</p><span id="more"></span><h2 id="用PrintStream仿制GUI系统控制台"><a href="#用PrintStream仿制GUI系统控制台" class="headerlink" title="用PrintStream仿制GUI系统控制台"></a>用PrintStream仿制GUI系统控制台</h2><blockquote><p><strong>不要</strong>试图在大型应用内使用PrintStream，因为他永远不会抛出<code>IOException</code>，调试用用算了</p></blockquote><p>在使用Java编程的时候，你可能会厌倦那个黑色的框框控制台，然而，在你使用GUI时，有些时候又会怀念那个框框。<br>我遇到了这样的一个情况，便是需要仿制一个系统控制台来显示系统输出(<code>System.out</code>和<code>System.err</code>)，分开显示。之所以说是仿制，因为只能输出不能输入（而且很丑）。<br>主要思路是用两个PrintStream（重写了<code>write</code>函数）来替代<code>System.out</code>和<code>System.err</code></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><p>主程序，将输出重定向</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ztr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ztr.frames.ConsoleFrame;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">PrintStream</span> <span class="variable">sysOut</span> <span class="operator">=</span> System.out;</span><br><span class="line">        <span class="type">PrintStream</span> <span class="variable">sysErr</span> <span class="operator">=</span> System.err;</span><br><span class="line">        <span class="comment">/*获取控制台输出*/</span></span><br><span class="line">        ConsoleFrame.init();</span><br><span class="line">        System.setOut(ConsoleFrame.getSysOutps());</span><br><span class="line">        System.setErr(ConsoleFrame.getSysErrps());</span><br><span class="line">        ConsoleFrmae.setVisible(<span class="literal">true</span>)</span><br><span class="line">        <span class="comment">/*这里往下的输出都会被重定向到ConsoleFrame的texrarea*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;blablabla&quot;</span>);</span><br><span class="line">        <span class="comment">/*恢复原始输出！！,小心被坑*/</span></span><br><span class="line">        System.setOut(sysOut);</span><br><span class="line">        System.setErr(sysErr);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ConsoleFrame-java"><a href="#ConsoleFrame-java" class="headerlink" title="ConsoleFrame.java"></a>ConsoleFrame.java</h3><p>一个静态的类，用来显示仿制的Console,在其中重写了PrintStream</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ztr.frames;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowListener;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConsoleFrame</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Frame f;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Panel out, err;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> TextArea console, consoleErr;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">PrintStream</span> <span class="variable">SysOutps</span> <span class="operator">=</span> <span class="literal">null</span>, SysErrps = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        f = <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;System Console&quot;</span>);</span><br><span class="line">        <span class="type">CardLayout</span> <span class="variable">layout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CardLayout</span>();</span><br><span class="line">        f.setLayout(layout);</span><br><span class="line">        out  = <span class="keyword">new</span> <span class="title class_">Panel</span>();</span><br><span class="line">        out.setLayout(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">2</span>, <span class="number">1</span>));</span><br><span class="line">        console = <span class="keyword">new</span> <span class="title class_">TextArea</span>();</span><br><span class="line">        console.setColumns(<span class="number">100</span>);</span><br><span class="line">        console.setRows(<span class="number">50</span>);</span><br><span class="line">        consoleErr = <span class="keyword">new</span> <span class="title class_">TextArea</span>();</span><br><span class="line">        consoleErr.setColumns(<span class="number">100</span>);</span><br><span class="line">        consoleErr.setRows(<span class="number">50</span>);</span><br><span class="line">        consoleErr.setBackground(Color.pink);</span><br><span class="line">        <span class="comment">/*重写方法，把输出重定向，即append到对应的textarea上*/</span></span><br><span class="line">        SysOutps = <span class="keyword">new</span> <span class="title class_">PrintStream</span>(System.out) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">(<span class="type">int</span> b)</span> &#123;</span><br><span class="line">                console.append(String.valueOf(b));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">(<span class="type">byte</span>[] buf, <span class="type">int</span> off, <span class="type">int</span> len)</span> &#123;</span><br><span class="line">                console.append(<span class="keyword">new</span> <span class="title class_">String</span>(buf, off, len));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        SysErrps = <span class="keyword">new</span> <span class="title class_">PrintStream</span>(System.out) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">(<span class="type">int</span> b)</span> &#123;</span><br><span class="line">                consoleErr.append(String.valueOf(b));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">(<span class="type">byte</span>[] buf, <span class="type">int</span> off, <span class="type">int</span> len)</span> &#123;</span><br><span class="line">                consoleErr.append(<span class="keyword">new</span> <span class="title class_">String</span>(buf, off, len));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        out.add(console);</span><br><span class="line">        out.add(consoleErr);</span><br><span class="line">        f.add(out);</span><br><span class="line">        f.pack();</span><br><span class="line">        f.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> &#123;</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> PrintStream <span class="title function_">getSysOutps</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SysOutps;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> PrintStream <span class="title function_">getSysErrps</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SysErrps;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setVisible</span><span class="params">(<span class="type">boolean</span> vis)</span> &#123;</span><br><span class="line">        f.setVisible(vis);;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>大概就是个很丑的框框（本来就是），我也懒得写，就用awt凑数了<br><img src="https://img-blog.csdnimg.cn/20200212112855844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="Console"><br>用SpringBoot的输出</p><h2 id="几句话"><a href="#几句话" class="headerlink" title="几句话"></a>几句话</h2><ul><li><strong>不要</strong>试图在大型应用内使用PrintStream，因为他永远不会抛出<code>IOException</code>，调试用用算了</li><li>在用完PrintStream后一定要恢复原始输出，除非你知道关闭后会不会还有输出</li><li>PrintStream的核心是<code>write</code>函数，重写这个就够了（除非你有信心全部重写）</li></ul>]]></content>
    
    <summary type="html">
    
      如何用 Java 仿造一个系统控制台
    
    </summary>
    
    
      <category term="Develop" scheme="https://hiztr.cn/categories/Develop/"/>
    
    
      <category term="java" scheme="https://hiztr.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>修改 IDEA 自带的 maven 源</title>
    <link href="https://hiztr.cn/2020/03/04/Change-Maven-in-Idea/"/>
    <id>https://hiztr.cn/2020/03/04/Change-Maven-in-Idea/</id>
    <published>2020-03-03T16:00:00.000Z</published>
    <updated>2020-05-19T09:04:28.907Z</updated>
    
    <content type="html"><![CDATA[<p>作死用过idea自带maven的都知道，在国内真的贼慢。就导入几个依赖就得花上大半个小时。于是我一番百度，果断更改了maven镜像源。现在记录下来以免再次踩坑。</p><span id="more"></span><h2 id="如何提高idea自带maven的更新速度"><a href="#如何提高idea自带maven的更新速度" class="headerlink" title="如何提高idea自带maven的更新速度"></a>如何提高idea自带maven的更新速度</h2><p>作死用过idea自带maven的都知道，在国内真的贼慢。就导入几个依赖就得花上大半个小时。于是我一番百度，果断更改了maven镜像源。现在记录下来以免再次踩坑。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ol><li>打开File - Settings<br><img src="https://img-blog.csdnimg.cn/20200206104948630.png" alt="files"></li><li>在搜索框内输入<code>maven</code></li><li>打开如图所示的地址<br><img src="https://img-blog.csdnimg.cn/20200206105655968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="bal"></li><li>修改， 加入如下代码 <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>uk<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://uk.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>CN<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>OSChina Central<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.oschina.net/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>internal nexus repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;url&gt;http://192.168.1.100:8081/nexus/content/groups/public/&lt;/url&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo.maven.apache.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure>  如图<img src="https://img-blog.csdnimg.cn/20200206110055542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="s"></li><li>重启一下idea，试试效果</li></ol>]]></content>
    
    <summary type="html">
    
      作死用过idea自带maven的都知道，在国内真的贼慢。就导入几个依赖就得花上大半个小时。于是我一番百度，果断更改了maven镜像源。
    
    </summary>
    
    
      <category term="Develop" scheme="https://hiztr.cn/categories/Develop/"/>
    
    
      <category term="java" scheme="https://hiztr.cn/tags/java/"/>
    
  </entry>
  
</feed>
