<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HelloWorld</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hiztr.cn/"/>
  <updated>2020-06-01T13:12:18.675Z</updated>
  <id>http://hiztr.cn/</id>
  
  <author>
    <name>HelloWorldZTR</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人博客搭建指南-静态网站托管</title>
    <link href="http://hiztr.cn/2020/06/01/Static-website-build-insturction/"/>
    <id>http://hiztr.cn/2020/06/01/Static-website-build-insturction/</id>
    <published>2020-06-01T11:42:16.000Z</published>
    <updated>2020-06-01T13:12:18.675Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>长文请配合目录食用，左下角有个⚓️图标，点击可展开目录</p></blockquote><p>大好消息，腾讯云的静态网站托管上线啦</p><p><a href="https://console.cloud.tencent.com/tcb/hosting" target="_blank" rel="noopener">https://console.cloud.tencent.com/tcb/hosting</a></p><p>也就是说，现在在国内终于有了比 GitPage 更好的解决方案了。<br>主要表现如下：</p><ul><li>网速更快（物理上更近啊）</li><li>按理说百度可以收录了</li><li>还有免费套餐(大约每月10k访问量)</li></ul><p>总而言之，真香</p><h2 id="注册腾讯云账号"><a href="#注册腾讯云账号" class="headerlink" title="注册腾讯云账号"></a>注册腾讯云账号</h2><p>这就…不用说了吧，顺带实名认证下方便将来买域名什么的</p><h2 id="打开静态网站托管"><a href="#打开静态网站托管" class="headerlink" title="打开静态网站托管"></a>打开静态网站托管</h2><p>在产品里搜索</p><p><img src="https://i.loli.net/2020/06/01/KxS7kOh4fdNJqWp.png" alt="屏幕快照 2020-06-01 下午7.58.23.png"></p><h2 id="创建一个云开发环境"><a href="#创建一个云开发环境" class="headerlink" title="创建一个云开发环境"></a>创建一个云开发环境</h2><p>一开始他会提示你新建云环境，点击</p><p><img src="https://i.loli.net/2020/06/01/p1jCQlrNYz2Tiye.png" alt="屏幕快照 2020-06-01 下午7.59.46.png"></p><p><strong>一定要选择按量计费和免费资源（不然欠费别怪我）</strong></p><h2 id="配置静态网站托管"><a href="#配置静态网站托管" class="headerlink" title="配置静态网站托管"></a>配置静态网站托管</h2><p>得先等云环境初始化好了，刷新一下，点击确定就好啦</p><p><img src="https://i.loli.net/2020/06/01/wSME6HeqfmxhgrB.png" alt="屏幕快照 2020-06-01 下午8.09.06.png"></p><p>依然是慢的要死</p><p>进来是这样的界面</p><p><img src="https://i.loli.net/2020/06/01/EFkhupJB54HOXec.png" alt="屏幕快照 2020-06-01 下午8.43.17.png"></p><h2 id="配置-hexo-博客"><a href="#配置-hexo-博客" class="headerlink" title="配置 hexo 博客"></a>配置 hexo 博客</h2><p>这个和之前的差不多，折叠起来放在下面</p><p>PS: 如果你已经装好了请直接跳到<code>建立本地环境</code>一节</p><div id="content"><h3 id="安装-node-js-并配置"><a href="#安装-node-js-并配置" class="headerlink" title="安装 node.js 并配置"></a>安装 node.js 并配置</h3><p>打开<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">官网</a>,无脑下载。</p><p><img src="https://s1.ax1x.com/2020/04/08/GfPH4U.png" alt="nodejs"></p><p>终端执行如下命令，无输出。（切换镜像源，不然卡死你）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h3><p>先建好一个<strong>空的</strong>文件夹，cd 到上一层目录，执行：(注意，windows powershell 会鬼畜，cmd就好)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init 你的文件夹名字</span><br></pre></td></tr></table></figure><h3 id="启动，关闭-hexo"><a href="#启动，关闭-hexo" class="headerlink" title="启动，关闭 hexo"></a>启动，关闭 hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器<code>localhost:4000</code>就能看到了<br>按<code>Ctrl + c</code>退出</p><h3 id="安装一大堆插件"><a href="#安装一大堆插件" class="headerlink" title="安装一大堆插件"></a>安装一大堆插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br><span class="line">npm install hexo-generator-json-content --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>如果你要用 Gitpage，记得不要用太多图片的主题，会很卡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure><p>是cofess的主题，很简洁</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>有两个文件，<code>themes/pure/_config.yml</code>和<code>_config.yml</code>，优先修改第一个</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">pure</span></span><br></pre></td></tr></table></figure><p>重新生成一下，不然不会生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>另外，还要修改诸如作者名、网址、网站名、评论插件等，各个主题皆有不同，请参考 readme 和百度<br>一般会有注释</p><h3 id="写文章，发表"><a href="#写文章，发表" class="headerlink" title="写文章，发表"></a>写文章，发表</h3><h4 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"文章名称"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"页面名称"</span> <span class="comment">#新建页面</span></span><br></pre></td></tr></table></figure><p>他会输出一个地址，你打开它就可以编辑了(紫色显示)</p><p><img src="https://s1.ax1x.com/2020/04/08/GfnF8x.png" alt="GfnF8x.png"></p><h4 id="文章格式"><a href="#文章格式" class="headerlink" title="文章格式"></a>文章格式</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">时间</span> <span class="string">xxxx-xx-xx</span> <span class="string">xx:xx:xx</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="comment">#分类，只有一个</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="comment">#标签，可有多个</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span> <span class="comment">#是否显示目录</span></span><br><span class="line"><span class="attr">desciption:</span> <span class="string">"简介，在搜索时可以看到，不要太长"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">文章简介，可以在主页看到</span></span><br><span class="line"><span class="string">&lt;!--</span> <span class="string">more</span> <span class="string">--&gt;</span></span><br><span class="line"><span class="string">正文</span></span><br></pre></td></tr></table></figure><p><strong>友链、分类、标签页面的开启</strong></p><p>不方便说明，百度或看 readme</p><h4 id="发表-注意差别⚠️"><a href="#发表-注意差别⚠️" class="headerlink" title="发表(注意差别⚠️)"></a>发表(注意差别⚠️)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g</span><br><span class="line">$ tcb hosting:deploy public -e 你的envid <span class="comment">#跟刚才一样</span></span><br></pre></td></tr></table></figure></div><h2 id="部署-cloud-base"><a href="#部署-cloud-base" class="headerlink" title="部署 cloud base"></a>部署 cloud base</h2><h3 id="安装-Tencent-cli"><a href="#安装-Tencent-cli" class="headerlink" title="安装 Tencent cli"></a>安装 Tencent cli</h3><p>注意哈，要先装 <code>node.js</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install -g @cloudbase/cli</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tcb -h <span class="comment">#应该有输出</span></span><br></pre></td></tr></table></figure><h3 id="建立本地环境"><a href="#建立本地环境" class="headerlink" title="建立本地环境"></a>建立本地环境</h3><p>首先，cd 到刚才 hexo init 的那一级目录：<br>结构大概如此</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  Web Site ls</span><br><span class="line">_admin-config.yml config            logs              node_modules      package-lock.json public            <span class="built_in">source</span>            website</span><br><span class="line">_config.yml       db.json           null              package.json      scaffolds         themes</span><br></pre></td></tr></table></figure><h4 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ tcb login</span><br></pre></td></tr></table></figure><p>在弹出的窗口登陆即可</p><h4 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h4><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tcb init public</span><br></pre></td></tr></table></figure><p>参数如下选择，回车确定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  Web Site tcb init public</span><br><span class="line">✔ 选择关联环境 · blog - [blog-1945c4:空]</span><br><span class="line">✔ 请输入项目名称 · website</span><br><span class="line">✔ 选择开发语言 · Node</span><br><span class="line">✔ 选择云开发模板 · Hello World</span><br><span class="line">✔ 创建项目 website 成功！</span><br></pre></td></tr></table></figure><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tcb hosting:deploy public -e 你的envid</span><br></pre></td></tr></table></figure><p>可以这样查看 envid（就是项目名➕一堆字符）</p><p><img src="https://i.loli.net/2020/06/01/7WY9ScAwxdElNjD.png" alt="屏幕快照 2020-06-01 下午8.24.27.png"></p><p>如下结果说明部署成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜  Web Site tcb hosting:deploy public -e blog-1945c4</span><br><span class="line">文件传输中 [==================================================] 100% 0.0s</span><br><span class="line">✔ </span><br><span class="line">部署完成 👉 http://url.url <span class="comment"># 这个就是部署好的地址</span></span><br><span class="line">✔ 文件共计 55 个</span><br><span class="line">✔ 文件上传成功 55 个</span><br><span class="line">✖ 文件上传失败 0 个</span><br></pre></td></tr></table></figure><p>浏览器打开这个网址就能看到了</p><h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p>打开_config.yml</p><p>把<code>url</code>修改为你刚才访问的网址</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://blog-1945c4-1255489341.tcloudbaseapp.com/</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing 'index.html' from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing '.html' from permalinks</span></span><br></pre></td></tr></table></figure><p>重新生成并部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g</span><br><span class="line">$ tcb hosting:deploy public -e 你的envid #跟刚才一样</span><br></pre></td></tr></table></figure><p>现在页面链接应该正常了</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>要选择方案为按量计费、免费额度</li><li>要修改网站根目录的 _config.yml 中的url</li><li>部署方式为<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g</span><br><span class="line">$ tcb hosting:deploy public -e 你的envid #跟刚才一样</span><br></pre></td></tr></table></figure></li><li>注意那个箭头啊，$符啊什么的都是终端提示符，别一股脑全粘进去了</li><li>另外，如果你想使用评论或其他的功能，请把url替换掉</li></ul><p>还有，你们可能觉得这个域名长的难以忍受，不过不慌，会介绍自定义域名的。如果你使用<code>hexo d</code>的话还是可以部署到github的，只不过链接会跳转到这里</p><p>如果有问题请评论，我会看到的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;长文请配合目录食用，左下角有个⚓️图标，点击可展开目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大好消息，腾讯云的静态网站托管上线啦&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://console.cloud.tencent.com/tcb/ho
      
    
    </summary>
    
    
      <category term="Develop" scheme="http://hiztr.cn/categories/Develop/"/>
    
    
      <category term="Website" scheme="http://hiztr.cn/tags/Website/"/>
    
  </entry>
  
  <entry>
    <title>我的世界像素生成器使用指南</title>
    <link href="http://hiztr.cn/2020/05/23/Pixel-gen-user-guide/"/>
    <id>http://hiztr.cn/2020/05/23/Pixel-gen-user-guide/</id>
    <published>2020-05-23T06:53:04.000Z</published>
    <updated>2020-05-30T01:15:44.540Z</updated>
    
    <content type="html"><![CDATA[<h2 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h2><p><a href="https://helloworldztr.github.io/mc/" target="_blank" rel="noopener">https://helloworldztr.github.io/mc/</a></p><h2 id="Change-Log"><a href="#Change-Log" class="headerlink" title="Change Log"></a>Change Log</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">### 0.1 基本功能</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### 0.1.0 基本功能</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### 0.1.1 修复色彩, canvas</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### 0.1.2 加入多线程，阈值</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### 0.1.3 Canvas 绘图优化</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### 0.1.4 加入自定义</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;地址&quot;&gt;&lt;a href=&quot;#地址&quot; class=&quot;headerlink&quot; title=&quot;地址&quot;&gt;&lt;/a&gt;地址&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://helloworldztr.github.io/mc/&quot; target=&quot;_blank&quot; rel=&quot;noo
      
    
    </summary>
    
    
      <category term="Develop" scheme="http://hiztr.cn/categories/Develop/"/>
    
    
  </entry>
  
  <entry>
    <title>macOS 小妙招—快速创建 pdf</title>
    <link href="http://hiztr.cn/2020/05/17/Create-pdf-in-macOS/"/>
    <id>http://hiztr.cn/2020/05/17/Create-pdf-in-macOS/</id>
    <published>2020-05-17T07:59:54.000Z</published>
    <updated>2020-05-19T09:05:08.511Z</updated>
    
    <content type="html"><![CDATA[<p>想创建pdf而不想下载乱七八糟的插件，看看这个吧(一听就是老营销号了)</p><a id="more"></a><h2 id="第一步-选中所有要添加的文件"><a href="#第一步-选中所有要添加的文件" class="headerlink" title="第一步 : 选中所有要添加的文件"></a>第一步 : 选中所有要添加的文件</h2><blockquote><p>可以使用 <code>command + a</code> 全选</p></blockquote><p><img src="https://i.loli.net/2020/05/17/Hiwj9Ktf7TxW18B.png" alt="选择文件"></p><h2 id="第二步-双击右键"><a href="#第二步-双击右键" class="headerlink" title="第二步 : 双击右键"></a>第二步 : 双击右键</h2><p>可以看到预览把它们打开在了一个窗口</p><p><img src="https://i.loli.net/2020/05/17/WxjegSfcZvkLr6C.png" alt="预览"></p><blockquote><p>可以在右侧拖动预览图来排序</p></blockquote><h2 id="第三步-导出"><a href="#第三步-导出" class="headerlink" title="第三步 : 导出"></a>第三步 : 导出</h2><p>排好序之后，选择<code>文件 - 导出为pdf</code></p><p><img src="https://i.loli.net/2020/05/17/tuE4xSk6XydM98U.png" alt="导出"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想创建pdf而不想下载乱七八糟的插件，看看这个吧(一听就是老营销号了)&lt;/p&gt;
    
    </summary>
    
    
      <category term="Other" scheme="http://hiztr.cn/categories/Other/"/>
    
    
  </entry>
  
  <entry>
    <title>个人博客搭建—使用图床</title>
    <link href="http://hiztr.cn/2020/05/17/Image-hosting-tips/"/>
    <id>http://hiztr.cn/2020/05/17/Image-hosting-tips/</id>
    <published>2020-05-17T04:00:00.000Z</published>
    <updated>2020-05-17T08:57:55.401Z</updated>
    
    <content type="html"><![CDATA[<p>继续填坑，来说怎么向文章里添加图片</p><a id="more"></a><h2 id="图床简介"><a href="#图床简介" class="headerlink" title="图床简介"></a>图床简介</h2><p>图床就是一个存储图片并向互联网提供这些图片的服务器，一般会使用 cdn 等使访问速度较快。</p><h2 id="为什么要使用图床"><a href="#为什么要使用图床" class="headerlink" title="为什么要使用图床"></a>为什么要使用图床</h2><ol><li>服务器承担不了过大的请求数量</li><li>服务器访问缓慢</li><li>更稳定安全的存储（注意某些并不安全，会突然暴毙）</li></ol><p>在最早的文章中，我选择了使用 Github 的免费托管。众所周知在国内 Github 访问是很慢的，所以不用图床会极大影响加载速度和用户体验。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>首先，介绍下国内使用还算不错的服务商：</p><ul><li>七牛</li><li><a href="https://sm.ms" target="_blank" rel="noopener">sm.ms</a></li><li><a href="https://imgurl.org/" target="_blank" rel="noopener">imgurl</a></li></ul><p>我现在再用 sm.ms 的，主要是免费还不用注册(最近上传有些慢不知为什么)。</p><h3 id="准备好你要的图片"><a href="#准备好你要的图片" class="headerlink" title="准备好你要的图片"></a>准备好你要的图片</h3><blockquote><p>小技巧：截图快捷键<br>Windows 用户: <code>Windows+Shift+S</code> (Windows 10) 或 <code>PrintScreen</code> 键<br>mac 用户: <code>Command+Shift+4</code> (区域截图) 按一下空格切换到窗口截图</p></blockquote><p>注意，如果网速不好压缩一下也是个好办法。<br>压缩网址<a href="https://tinypng.com" target="_blank" rel="noopener">https://tinypng.com</a></p><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><p><img src="https://i.loli.net/2020/05/17/MWXAynGBtc4qLEj.png" alt="屏幕快照 2020-05-17 下午4.51.11.png"></p><p>说的很清楚：把文件拖到这里，或者复制粘贴</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><img src="https://i.loli.net/2020/05/17/aVqkPBilnC8MAh5.png" alt="屏幕快照 2020-05-17 下午4.54.41.png"></p><p>选择 markdown，复制下来插入 markdown 源码即可。注意别粘错了</p><p>看起来像这样</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">提示语</span>](<span class="link">url</span>)</span><br></pre></td></tr></table></figure><p>刷新一下就能用啦</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继续填坑，来说怎么向文章里添加图片&lt;/p&gt;
    
    </summary>
    
    
      <category term="Develop" scheme="http://hiztr.cn/categories/Develop/"/>
    
    
      <category term="Website" scheme="http://hiztr.cn/tags/Website/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建—使用 Gitalk</title>
    <link href="http://hiztr.cn/2020/04/09/Gitalk-register-and-use/"/>
    <id>http://hiztr.cn/2020/04/09/Gitalk-register-and-use/</id>
    <published>2020-04-08T23:16:44.000Z</published>
    <updated>2020-05-19T09:05:08.514Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇说了基本的静态博客搭建，这里补充一下评论系统的使用方法。</p><a id="more"></a><h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><p>上一篇文章说过，静态博客就只是一堆 html 页面，并没有后台，自然也不能响应动态请求。而评论需要有存储、响应请求……自然是不能实现。</p><p>然而并不是不能实现，<code>serverless</code>无服务器的技术可以帮我们解决这个难题。Gitalk 是一个 js 插件，能使用Github账号来登陆，并将用户的评论转为 issue 存到仓库里。又剩下了一笔资金是不是。更方便的是它不需要备案就可以直接使用。</p><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>首先你得有个 Github 账号（都用 Gitpage 了怎么就没有 GitHub 账号）<br>其次你的主题最好支持配置 Gitalk，就省的写代码了。<br>类似如下这样</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span> <span class="comment"># gitalk. https://gitalk.github.io/</span></span><br><span class="line">    <span class="attr">owner:</span> <span class="string">HelloWorldZTR</span> <span class="comment">#必须. GitHub repository 所有者，可以是个人或者组织。</span></span><br><span class="line">    <span class="attr">admin:</span> <span class="string">HelloWorldZTR</span> <span class="comment">#必须. GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">HelloWorldZTR.github.io</span> <span class="comment">#必须. GitHub repository.</span></span><br><span class="line">    <span class="attr">ClientID:</span> <span class="comment">#必须. GitHub Application Client ID.</span></span><br><span class="line">    <span class="attr">ClientSecret:</span> <span class="comment">#必须. GitHub Application Client Secret.</span></span><br></pre></td></tr></table></figure><h3 id="注册-OAuth-应用"><a href="#注册-OAuth-应用" class="headerlink" title="注册 OAuth 应用"></a>注册 OAuth 应用</h3><h4 id="你的头像-Settings"><a href="#你的头像-Settings" class="headerlink" title="你的头像- Settings"></a>你的头像- Settings</h4><p><img src="https://i.loli.net/2020/04/09/zojwN7LDA2RyYpP.png" alt="屏幕快照 2020-04-09 上午7.32.10.png"></p><h4 id="点击-Developer-Settings-（最下）"><a href="#点击-Developer-Settings-（最下）" class="headerlink" title="点击 Developer Settings （最下）"></a>点击 Developer Settings （最下）</h4><p><img src="https://i.loli.net/2020/04/09/UxyS34eMpXP6A7E.png" alt="屏幕快照 2020-04-09 上午7.33.15.png"></p><h4 id="选择-OAuth-Apps-并新建一个-OAuth-App"><a href="#选择-OAuth-Apps-并新建一个-OAuth-App" class="headerlink" title="选择 OAuth Apps 并新建一个 OAuth App"></a>选择 OAuth Apps 并新建一个 OAuth App</h4><p><img src="https://i.loli.net/2020/04/09/MEf9PwakbUNvgD7.png" alt="屏幕快照 2020-04-09 上午7.33.38.png"></p><h4 id="填写表格"><a href="#填写表格" class="headerlink" title="填写表格"></a>填写表格</h4><p><img src="https://i.loli.net/2020/04/09/6LhEJAVqUe7WvTk.png" alt="Table"></p><ul><li>Application name: 应用名，用户在使用 Github 账号登陆时可以看到。要可信，明确用途，我是博客评论就写blog comment</li><li>Homepage URL: 博客网址，没得说</li><li>description可以写，也可以不写</li><li>Callback URL：登陆后跳转到的 URL 和博客地址相同即可</li></ul><h3 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h3><p>复制他给你的两个 ID 填写到你的配置文件里（<code>themes/xxx/_config.yml</code>）</p><p><img src="https://i.loli.net/2020/04/09/aSXqwRfn4KNiL2U.png" alt="屏幕快照 2020-04-09 上午7.51.43.png"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span> <span class="comment"># gitalk. https://gitalk.github.io/</span></span><br><span class="line">    <span class="attr">owner:</span> <span class="string">HelloWorldZTR</span> <span class="comment">#必须. GitHub repository 所有者，可以是个人或者组织。</span></span><br><span class="line">    <span class="attr">admin:</span> <span class="string">HelloWorldZTR</span> <span class="comment">#必须. GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">HelloWorldZTR.github.io</span> <span class="comment">#必须. GitHub repository.</span></span><br><span class="line">    <span class="attr">ClientID:</span> <span class="string">xxxxxxxxxxxx</span> <span class="comment">#必须. GitHub Application Client ID.</span></span><br><span class="line">    <span class="attr">ClientSecret:</span> <span class="string">xxxxxxxxxxxxxx</span> <span class="comment">#必须. GitHub Application Client Secret.</span></span><br></pre></td></tr></table></figure><p>重启一下服务器</p><p>应该能看到这样的东西</p><p><img src="https://i.loli.net/2020/04/09/y9NIpMaO356CuHT.png" alt="屏幕快照 2020-04-09 上午7.58.32.png"></p><p>（登陆可能有点慢，刷新一下就不会显示 <code>Network Error</code> 了）</p><p>发一条评论，应该可以看见 issue 了</p><p><img src="https://i.loli.net/2020/04/09/R4tqaDrEop2FX3Q.png" alt="屏幕快照 2020-04-09 上午8.00.54.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上一篇说了基本的静态博客搭建，这里补充一下评论系统的使用方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Develop" scheme="http://hiztr.cn/categories/Develop/"/>
    
    
      <category term="Website" scheme="http://hiztr.cn/tags/Website/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建指南</title>
    <link href="http://hiztr.cn/2020/04/08/WebSite-Build-instruction/"/>
    <id>http://hiztr.cn/2020/04/08/WebSite-Build-instruction/</id>
    <published>2020-04-08T08:29:02.000Z</published>
    <updated>2020-06-01T12:38:08.744Z</updated>
    
    <content type="html"><![CDATA[<p>让我们来聊一聊关于搭建静态个人博客的一些小事</p><a id="more"></a><article class="panel panel-default hover-shadow hover-grow" itemscope="" itemtype="http://schema.org/BlogPosting">  <div class="panel-body">    <!-- <div class="article-meta">      <time datetime="2020-04-07T05:45:51.000Z" itemprop="datePublished"></time>    </div> -->    <h3 class="article-title" itemprop="name">      <a class="article-link" href="/tags/Website/">建站指南</a>      <p>我写的一系列指南，让你能快速建立一个和这个网站一样简洁有用的个人博客站点</p>    </h3>  </div>  <!-- <div class="panel-footer">            </div> --></article><p>⚠️！！如果你想建一个更便捷有用的网站，建议查看静态网站部署的那一篇</p><blockquote><p>长文请配合目录食用，左下角有个⚓️图标，点击可展开目录</p></blockquote><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>这个纯粹是说给自己看的，相信大家既然有搭建自己博客的想法，肯定就知道为什么了。首先，大多数博客网站像<code>CSDN</code>、<code>博客园</code>啥的限制很多，个性化很少，像新浪博客直接就 pass<br>掉。其次，纯粹是一种程序员的热情，谁都不想让自己的心血白白浪费，自然需要一个 decent 的地方来挥洒自己的热情。最后，不论谁都会有很多事情想记录和分享出来。<br>综上，搭建一个个人博客原因很充足了吧？幸运的事我们不需要花很多时间或精力，大约需要 100 元/年 的开销和 1 小时左右的时间。(如果你不要域名甚至可以不花钱)</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>纯当科普，大佬请跳过。<br>这类网站有两种，静态和动态。静态就是不需要服务器的形式，直接渲染成 <code>html</code>，交互操作（评论，访问量）就全靠 <code>js(javascript)</code>了。最出名的有<br><code>hexo</code>、<code>Jekyll</code>、<code>Hugo</code>之类的。通常不需要多少服务器开销，功能基本够用。<br>再是动态，不得不说的就是<code>wordpress</code>,这种网站就要用真正的服务器了，要有数据库、web<br>server……就是那些<code>php</code>,<code>jsp</code>,<code>asp</code>写的网站。当然就得为服务器出把血了（参考价1000元/年），好处就是有酷炫功能（登陆、论坛什么的）</p><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><p>我们这里不说真正的服务器，只搞静态的网站（穷就完事了）<br>跟随大众，选（白嫖） GitPage 没错。</p><h3 id="GitPage"><a href="#GitPage" class="headerlink" title="GitPage"></a>GitPage</h3><p>优点：完全免费、老牌稳定<br>缺点：国内访问慢、百度不收录</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>我的博客就在 Github 上，你需要：</p><ul><li>注册一个 GitHub 账号</li><li>创建一个仓库，名叫<code>你的账号.github.io</code>，往里面上传一个<code>index.html</code></li><li>访问<code>https://你的账号.github.io</code>就能看到你的 index.html 了</li></ul><p>访问慢、百度不收录：<br>随便办一个 CDN（内容分发网络）（10 元/年），后面详述。</p><h3 id="CodingPage"><a href="#CodingPage" class="headerlink" title="CodingPage"></a>CodingPage</h3><p>被腾讯收购后成了静态网站托管，看似要收费实际不会收费。有空我去试试。<br><a href="https://cloud.tencent.com/product/wh" target="_blank" rel="noopener">https://cloud.tencent.com/product/wh</a></p><h3 id="OBS-对象存储"><a href="#OBS-对象存储" class="headerlink" title="OBS 对象存储"></a>OBS 对象存储</h3><p>如果你都不想用，可以办一个<a href="https://www.aliyun.com/product/oss?utm_content=se_1005017193" target="_blank" rel="noopener">对象存储服务</a>(本质上原理相同)，总而言之可行而不好用。</p><h2 id="博客本体"><a href="#博客本体" class="headerlink" title="博客本体"></a>博客本体</h2><p>最重要的部分，即<code>hexo</code>、<code>Jekyll</code>、<code>Hugo</code>之类的，下面详细记述 hexo 的安装过程。</p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li>注册一个 GitHub 账号</li><li>创建一个仓库，名叫<code>你的账号.github.io</code></li></ul><h3 id="安装-node-js-并配置"><a href="#安装-node-js-并配置" class="headerlink" title="安装 node.js 并配置"></a>安装 node.js 并配置</h3><p>打开<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">官网</a>,无脑下载。</p><p><img src="https://s1.ax1x.com/2020/04/08/GfPH4U.png" alt="nodejs"></p><p>终端执行如下命令，无输出。（切换镜像源，不然卡死你）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h3><p>打开官网，无脑下载（linux,mac不用下载，系统自带）</p><p>安装一路 Yes</p><h3 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h3><p>先建好一个<strong>空的</strong>文件夹，cd 到上一层目录，执行：(注意，windows powershell 会鬼畜，cmd就好)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init 你的文件夹名字</span><br></pre></td></tr></table></figure><h3 id="启动，关闭-hexo"><a href="#启动，关闭-hexo" class="headerlink" title="启动，关闭 hexo"></a>启动，关闭 hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器<code>localhost:4000</code>就能看到了<br>按<code>Ctrl + c</code>退出</p><h3 id="安装一大堆插件"><a href="#安装一大堆插件" class="headerlink" title="安装一大堆插件"></a>安装一大堆插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br><span class="line">npm install hexo-generator-json-content --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>如果你要用 Gitpage，记得不要用太多图片的主题，会很卡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure><p>是cofess的主题，很简洁</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>有两个文件，<code>themes/pure/_config.yml</code>和<code>_config.yml</code>，优先修改第一个</p><p>在<code>_config.yml</code>文末，修改如下(repo一行自己修改为仓库的ssh)，这样他会直接提交到你的仓库里。</p><p><img src="https://s1.ax1x.com/2020/04/08/Gfiebt.png" alt="Gfiebt.png"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">git@github.com:HelloWorldZTR/HelloWorldZTR.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>顺便改个主题</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">pure</span></span><br></pre></td></tr></table></figure><p>重新生成一下，不然不会生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>另外，还要修改诸如作者名、网址、网站名、评论插件等，各个主题皆有不同，请参考 readme 和百度</p><h3 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h3><p>借用一下思否的图<br>生成ssh公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"邮箱地址"</span></span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">'上面的邮箱'</span></span><br><span class="line"><span class="comment"># 三次回车 =&gt; 密码为空</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/08/GfeWm4.jpg" alt="GfeWm4.jpg"></p><p><img src="https://s1.ax1x.com/2020/04/08/Gfeh79.jpg" alt="Gfeh79.jpg"><br>把刚才的cat输出拷贝粘贴到框里</p><p><img src="https://s1.ax1x.com/2020/04/08/Gfeofx.jpg" alt="Gfeofx.jpg"></p><h3 id="写文章，发表"><a href="#写文章，发表" class="headerlink" title="写文章，发表"></a>写文章，发表</h3><h4 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"文章名称"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"页面名称"</span> <span class="comment">#新建页面</span></span><br></pre></td></tr></table></figure><p>他会输出一个地址，你打开它就可以编辑了(紫色显示)</p><p><img src="https://s1.ax1x.com/2020/04/08/GfnF8x.png" alt="GfnF8x.png"></p><h4 id="文章格式"><a href="#文章格式" class="headerlink" title="文章格式"></a>文章格式</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">时间</span> <span class="string">xxxx-xx-xx</span> <span class="string">xx:xx:xx</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="comment">#分类，只有一个</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="comment">#标签，可有多个</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span> <span class="comment">#是否显示目录</span></span><br><span class="line"><span class="attr">desciption:</span> <span class="string">"简介，在搜索时可以看到，不要太长"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">文章简介，可以在主页看到</span></span><br><span class="line"><span class="string">&lt;!--</span> <span class="string">more</span> <span class="string">--&gt;</span></span><br><span class="line"><span class="string">正文</span></span><br></pre></td></tr></table></figure><p><strong>友链、分类、标签页面的开启</strong></p><p>不方便说明，百度或看 readme</p><h4 id="发表"><a href="#发表" class="headerlink" title="发表"></a>发表</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g <span class="comment"># 重新生成</span></span><br><span class="line">hexo d <span class="comment"># 发布到 Github</span></span><br></pre></td></tr></table></figure><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>有名网址，不想输<code>xxx.github.io</code>，还想再个性化点？花钱买个域名就好啦。</p><p>不想用分配的域名，自己去 <a href="https://sg.godaddy.com/zh" target="_blank" rel="noopener">狗爹网</a> 或国内平台办理即可。不同域名价格差很大，记得货比三家～</p><p>然后在 <a href="https://cloud.tencent.com/product/cns" target="_blank" rel="noopener">DNSpod</a> 中配一下即可，如果有CDN要关联。具体做法可以百度，我马上就去填坑</p><h2 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h2><p>如果你想用 Gitpage 的话，这点钱花的有必要。具体做法不多说，记得是 <strong>CDN 内容分发网络</strong>，套餐选 <strong>按需计费</strong> 即可，每年 50G 对博客站完全足够。<br>大家可以货比三家，好好算算价钱。</p><p>我会详细介绍域名和 CDN 的使用方法。</p><h2 id="其他事项"><a href="#其他事项" class="headerlink" title="其他事项"></a>其他事项</h2><p>你需要去搜索引擎提交你的网站，不然没有流量</p><h2 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h2><p>见这里<a href="https://helloworldztr.github.io/2020/04/09/Gitalk-register-and-use/" target="_blank" rel="noopener">https://helloworldztr.github.io/2020/04/09/Gitalk-register-and-use/</a></p>]]></content>
    
    <summary type="html">
    
      让我们来聊一聊关于搭建静态个人博客的一些小事
    
    </summary>
    
    
      <category term="Develop" scheme="http://hiztr.cn/categories/Develop/"/>
    
    
      <category term="Website" scheme="http://hiztr.cn/tags/Website/"/>
    
  </entry>
  
  <entry>
    <title>黑苹果 ATI HD 显卡通用驱动方式及 HD 5450 的驱动</title>
    <link href="http://hiztr.cn/2020/03/10/Hackintosh-ATI-Driver/"/>
    <id>http://hiztr.cn/2020/03/10/Hackintosh-ATI-Driver/</id>
    <published>2020-03-10T09:37:32.000Z</published>
    <updated>2020-05-26T05:21:53.765Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章将不采用任何付费的 kexts，用苹果的原生机制驱动我们的显卡。</p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>非常感谢<a href="http://blog.csdn.net/wr132/article/details/54837303" target="_blank" rel="noopener">这位博主的博客</a>不仅启发了我，而且解决了我的问题<br>转载<a href="http://blog.csdn.net/wr132/article/details/54837303" target="_blank" rel="noopener">http://blog.csdn.net/wr132/article/details/54837303</a><br>我个人的显卡是<code>HD 5450</code>。这篇文章将不采用任何付费的 kexts，用苹果的原生机制驱动我们的显卡。<br>现在我整理了相关资料，希望能帮助大家</p></blockquote><p>注意，你需要使用 ATI HD 显卡， CLover 引导</p><blockquote><p>另外，这里只写了 HD 5xxx/6xxx 的相关信息，若果是其他的显卡可能需要爬帖找找资料，但是希望这篇文章可以启发一下 :D<br>还有，如果你在用 HD 5xxx/6xxx 显卡装 Mojave 或 Catalina ，请老老实实换回 High Sierra，或者扔了显卡，去深水宝淘一个<a href="https://blog.daliansky.net/Mojave-Hardware-Support-List.html" target="_blank" rel="noopener">黑苹果免驱卡</a>（这些显卡不支持新 Metal，根本就不能用，从 HD 7xxx 才支持）</p></blockquote><h2 id="显卡不正常驱动的表现"><a href="#显卡不正常驱动的表现" class="headerlink" title="显卡不正常驱动的表现"></a>显卡不正常驱动的表现</h2><p>在黑苹果过程中，驱动显卡可谓最重要的一步了，因为没有驱动，你的电脑会成这样：</p><ul><li><code>5M</code> 的显存 (虽然跟我的 512M 差不多)</li><li>显卡型号不能显示</li><li><code>1280x720</code> 的白内障分辨率</li><li>卡成 xxx 的启动器</li><li>没有透明等炫酷特效</li><li>撕裂严重</li></ul><p>如果你上面的问题都没有遇到，那么就恭喜你已经驱动好显卡了，或者苹果本身就支持你这张显卡。这也引出了我们操作的原理。</p><h2 id="操作原理及具体操作"><a href="#操作原理及具体操作" class="headerlink" title="操作原理及具体操作"></a>操作原理及具体操作</h2><p>这里我们将通过 Clover 注入显卡虚假 ID ，让系统认为安装的显卡是原生支持的，从而驱动。这里只列出了 ATI 显卡，不过其他的 A卡或许也可以通过这种方法驱动。</p><p>我将把 ID 表放在文末</p><h3 id="挂载-EFI-分区"><a href="#挂载-EFI-分区" class="headerlink" title="挂载 EFI 分区"></a>挂载 EFI 分区</h3><p>这里需要用到 Clover 做引导，并下载安装 <code>Clover Configurator</code></p><p>打开 Clover Configurator，选择挂载分区。<br><img src="https://img-blog.csdnimg.cn/20200311072018758.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="mount"></p><p>挂载你启动用的 EFI 分区，输入密码。</p><h3 id="打开配置文件"><a href="#打开配置文件" class="headerlink" title="打开配置文件"></a>打开配置文件</h3><p>点击最左下角的图标，导入你的 <code>config.plist</code></p><p><img src="https://img-blog.csdnimg.cn/20200311072314138.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="config"><br>(下面开始可能会有风险，推荐全部看完后再决定尝试)</p><h3 id="修改-fake-ID"><a href="#修改-fake-ID" class="headerlink" title="修改 fake ID"></a>修改 fake ID</h3><p>按 <code>command + 空格</code>呼出菜单,打开<code>System Information.app</code><br>选择<code>图形卡/显示器</code>，里面有设备 ID，记下来<br><img src="https://img-blog.csdnimg.cn/20200311072508267.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="information"><br>我这里的显卡 ID 是<code>0x68e0</code> (设备 ID 和虚假 ID 一样，因为我已经注入成功了，但是本来不是这样的，本来是0x68E1)<br>在文末的支持对照表内找到<strong>型号、ID 相似</strong>的显卡，复制下来<strong>表中的</strong>ID<br>我在这里找到的虚假 ID 是<code>0x68E01002</code> (5470m,虽然是移动显卡但可以正常驱动)<br>非常巧，5470m配合我的<code>i5-2400</code>刚好组合成了imac mid2011的配置（imac12,2），顺带也可以把smbios注入进去。</p><h3 id="注入显卡"><a href="#注入显卡" class="headerlink" title="注入显卡"></a>注入显卡</h3><p>在 Clover Configurator 中选择<code>设备设置</code>栏，在仿冒 ID 里 ATI 中写上虚假 ID<br><img src="https://img-blog.csdnimg.cn/20200311072948518.jpeg" alt="在这里插入图片描述"></p><p>再转到<code>显卡设置</code>栏，钩上<code>注入ATI/AMD 显卡</code>选项，在 <code>FB名称</code>中选择你那个系列的名称。<br><img src="https://img-blog.csdnimg.cn/20200311073444967.png" alt="选项"></p><p>这里有点问题，具体选哪个 FB 取决于你显卡的接口类型，本来应该按照那位博主的博客是该选 Eulemur 的，但最后还选了 Baboon<br>这里可以使用<code>AMD Framebuffer Utility</code>来选择 FB，但事实证明瞎猜也是可行的方法（但是等你看完了再去猜）。</p><p>点击最左下角的保存文件按钮</p><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>我按照那位博主的方法，成功驱动了显卡，但当我一重启，居然黑屏了。<br>我发现系统正常启动，但是显卡没有输出。经过一番查询、翻贴，发现是 FB 的问题。<br><strong>如果你也出现了黑屏，请先别着急放弃：</strong></p><p>在启动之前选择 Option<br><img src="https://img-blog.csdnimg.cn/2020031107425267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打开Graphics Injector<br><img src="https://img-blog.csdnimg.cn/20200311074327212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>再把 Inject ATI 的钩去掉，就可以正常启动了，然后再重复以上步骤，修改 FB<br>或者，你可以直接在 CLover 中 FB config 输入FB 名。<br><img src="https://img-blog.csdnimg.cn/20200311074453127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>最后说一句，黑苹果要的是耐心，当然你可以不挨个尝试 FB 名称，而直接注入 FB， 但是由于 AMD Framebuffer Utility 貌似找不到，所以这种方法反倒是节省了时间。一句话，干他就完事了。</p><p>截图为证<br><img src="https://img-blog.csdnimg.cn/20200311075524168.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>这里说说我为什么不能使用那个博主的 FB 驱动 HD 5450<br>因为我的显卡是 DDVI 接口的，可以分出两个 VGA<br>所以 FB 是Baboon（据推测）<br>如果大家的也是dell 的 OEM 卡，也是 DDVI 的，直接照着这个做就行。若不是，可能就得花时间挨个尝试了。<br>最后祝大家早日吃上黑苹果:P</p><h2 id="ID-列表"><a href="#ID-列表" class="headerlink" title="ID 列表"></a>ID 列表</h2><p>这里列出的是来自百度问答的 ID 表，也存起来防吞。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">ATI5系列全部ID</span><br><span class="line">0x68981002 5870</span><br><span class="line">0x68991002 5850</span><br><span class="line">0x68E01002 5470m 6370m为68E4&#x2F;&#x2F;8.22更新</span><br><span class="line">0x68E11002 5430&#x2F;5450&#x2F;5430m</span><br><span class="line">0x68D81002 5670</span><br><span class="line">0x68C01002 5730m 6570m</span><br><span class="line">0x68C11002 5650m 6550m</span><br><span class="line">0x68D91002 5630</span><br><span class="line">0x68B81002 5770</span><br><span class="line">0x68B01002 5870m ?</span><br><span class="line">0x68B11002 未找到 很有可能是5700Series或5800m Series</span><br><span class="line">0x68A01002 5870m</span><br><span class="line">0x68A11002 5800m Series</span><br><span class="line">ATI6系列全部ID</span><br><span class="line">0x67681002 CAICOS GL PRO(专业卡)</span><br><span class="line">0x67701002 6400 series</span><br><span class="line">0x67791002 6450</span><br><span class="line">0x67601002 6470m</span><br><span class="line">0x67611002 6430m</span><br><span class="line">0x67501002 6570</span><br><span class="line">0x67581002 6670</span><br><span class="line">0x67591002 6570</span><br><span class="line">0x67401002 6730m</span><br><span class="line">0x67411002 6650m 6625m&#x2F;7610m</span><br><span class="line">0x67451002 未找到 很有可能是6600m&#x2F;6700m Series或6600Series</span><br><span class="line">0x67381002 6870</span><br><span class="line">0x67391002 6850</span><br><span class="line">0x67201002 6990m</span><br><span class="line">0x67221002 BARTS GL2 (专业卡)</span><br><span class="line">0x67181002 6970</span><br><span class="line">0x67191002 6950</span><br><span class="line">0x68401002 7670m</span><br><span class="line">0x68411002 7500m&#x2F;7600m series</span><br><span class="line">0x67041002 CAYMAN GL PRO (专业卡)</span><br><span class="line">AMD加速剂驱动</span><br><span class="line">AMDBartsGraphicsAccelerator</span><br><span class="line">0x67381002 6870</span><br><span class="line">0x67391002 6850 6790可替换这个ID</span><br><span class="line">0x67201002 6900m</span><br><span class="line">0x67221002 BARTS GL2 (专业卡)</span><br><span class="line">AMDCaicosGraphicsAccelerator</span><br><span class="line">0x67681002 CAICOS GL PRO(专业卡)</span><br><span class="line">0x67701002 6400 series</span><br><span class="line">0x67791002 6450</span><br><span class="line">0x67601002 6470m</span><br><span class="line">0x67611002 6430m</span><br><span class="line">AMDCaymanGraphicsAccelerator</span><br><span class="line">0x67181002 6970</span><br><span class="line">0x67191002 6950</span><br><span class="line">0x67041002 CAYMAN GL PRO (专业卡)</span><br><span class="line">AMDCedarGraphicsAccelerator</span><br><span class="line">0x68E01002 5470m 5450&#x2F;6370等卡替换这个ID</span><br><span class="line">AMDCypressGraphicsAccelerator</span><br><span class="line">0x68981002 5870</span><br><span class="line">0x68991002 5850</span><br><span class="line">AMDJuniperGraphicsAccelerator</span><br><span class="line">0x68B01002 5800m Series</span><br><span class="line">0x68B11002 未找到很有可能是5700Series或5800m Series</span><br><span class="line">0x68A01002 5870m</span><br><span class="line">0x68A11002 5800m Series</span><br><span class="line">0x68B81002 5770 5750&#x2F;6770&#x2F;6750可在这替换ID</span><br><span class="line">AMDLombokGraphicsAccelerator</span><br><span class="line">0x68401002 6700m series</span><br><span class="line">0x68411002 6600m series</span><br><span class="line">AMDRedwoodGraphicsAccelerator</span><br><span class="line">0x68D81002 5670</span><br><span class="line">0x68C01002 5730m 6570m</span><br><span class="line">0x68C11002 5650m 6550m</span><br><span class="line">0x68D91002 5630</span><br><span class="line">AMDTurksGraphicsAccelerator</span><br><span class="line">0x67501002 6570</span><br><span class="line">0x67581002 6670</span><br><span class="line">0x67591002 6570</span><br><span class="line">0x67401002 6700m series</span><br><span class="line">0x67411002 6600m series</span><br><span class="line">0x67451002 未找到 很有可能是6600m&#x2F;6700m Series或6600Series</span><br></pre></td></tr></table></figure><p>我们要通过操作，注入以下支持显卡的 ID：(不一定百分百准确，笔记本显卡不一定真的支持)</p><p><strong>HD 台式机原生显卡</strong> |  <strong>HD 笔记本原生显卡</strong>(m)</p><table><thead><tr><th>名称</th><th>ID</th><th>名称</th><th>ID</th></tr></thead><tbody><tr><td>5630</td><td>0x68D91002</td><td>5430m</td><td>0x68E11002</td></tr><tr><td>5670</td><td>0x68D81002</td><td>5470m</td><td>0x68E01002</td></tr><tr><td>5770</td><td>0x68B81002</td><td>5650m</td><td>0x68C11002</td></tr><tr><td>5850</td><td>0x68991002</td><td>5730m</td><td>0x68C01002</td></tr><tr><td>5870</td><td>0x68981002</td><td>5800m series</td><td>0x68A11002</td></tr><tr><td>6450</td><td>0x67791002</td><td>6470m</td><td>0x67601002</td></tr><tr><td>6570</td><td>0x67501002</td><td>6600m series</td><td>0x68411002</td></tr><tr><td>6670</td><td>0x67581002</td><td>6700m series</td><td>0x68401002</td></tr><tr><td>6850</td><td>0x67391002</td><td>6900m</td><td>0x67201002</td></tr><tr><td>6870</td><td>0x67381002</td><td>7500m/7600m</td><td>0x68411002</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">移动版原生支持的有：</span><br><span class="line">5系列:5430m、5470m、5650m、5730m、5800m 系列（除了5870m之外，其他5800m系列的具体ID我并没有查到，如果知道的话请补充）</span><br><span class="line">6系列: 6470m、6600m series、6700m series、6900m、7500m&#x2F;7600m series（具体型号我查不到，希望知道的童鞋补充）</span><br><span class="line">而6550m和6570m完全是5650m和5730m的马甲卡，ID都是一样的，对系统来说完全没有区别。</span><br><span class="line">笔记本原生支持不等于免驱，继续往下看吧。</span><br><span class="line">台式机的话：</span><br><span class="line">桌面卡可以原生支持的有</span><br><span class="line">5630 5670 5770 5850 5870</span><br><span class="line">6450 6570 6670 6850 6870</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      这篇文章将不采用任何付费的 kexts，用苹果的原生机制驱动我们的显卡。
    
    </summary>
    
    
      <category term="Hackintosh" scheme="http://hiztr.cn/categories/Hackintosh/"/>
    
    
  </entry>
  
  <entry>
    <title>Logistic Regression 的通俗解释</title>
    <link href="http://hiztr.cn/2020/03/05/Simple-explain-to-logistic-regrssion/"/>
    <id>http://hiztr.cn/2020/03/05/Simple-explain-to-logistic-regrssion/</id>
    <published>2020-03-05T01:23:52.000Z</published>
    <updated>2020-05-26T05:21:16.281Z</updated>
    
    <content type="html"><![CDATA[<p>最近开始学习机器学习，了解了Logistic Regression 的原理。我个人认为，Logistic Regression 是机器学习最基础的模型，它诠释了机器学习的基本原理。</p><a id="more"></a><h1 id="Logistic-Regression-Logistic-回归-的通俗解释"><a href="#Logistic-Regression-Logistic-回归-的通俗解释" class="headerlink" title="Logistic Regression (Logistic 回归) 的通俗解释"></a>Logistic Regression (Logistic 回归) 的通俗解释</h1><p>最近开始学习机器学习（怎么感觉这句话怪怪的），了解了Logistic Regression 的原理。我个人认为，Logistic Regression 是机器学习最基础的模型，它诠释了机器学习的基本原理</p><p>先来一张经典的图</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly90aW1nc2EuYmFpZHUuY29tL3RpbWc_aW1hZ2UmcXVhbGl0eT04MCZzaXplPWI5OTk5XzEwMDAwJnNlYz0xNTgzMzgyMjgyMTMyJmRpPWQ5YTU4MmU3NTZkYTA1Nzc1NGQwNWE2MDIzNGIwNDYxJmltZ3R5cGU9MCZzcmM9aHR0cCUzQSUyRiUyRmltYWdlcy5jbmJsb2dzLmNvbSUyRmNuYmxvZ3NfY29tJTJGamNsaWFuOTElMkYxMTQ1NjQ2JTJGb19sci5wbmc?x-oss-process=image/format,png" alt="Logistic Regression"></p><h2 id="Logistic-Regression-的目的"><a href="#Logistic-Regression-的目的" class="headerlink" title="Logistic Regression 的目的"></a>Logistic Regression 的目的</h2><p>我们先忘了上面那张图，来看一张干净简单一点的：（纯手画有点丑）</p><p><img src="https://i.loli.net/2020/03/05/ogU5PGBlwIe9mYb.png" alt="logistic.png"></p><p>这个过程很简单，便是<strong>根据已有的参数给出一个答案</strong></p><p>我们先来看一下这里面的参数：</p><ul><li>x1 和 x2 ：输入的参数</li><li>w1 和 w2 ：权重（先不用管）</li><li>b ：biase（也不用管）</li></ul><p>我们再来更形象地描述一下：</p><p>比方说你有一个房子，有两个属性：<strong>房屋面积 x1 ，卧室数量 x2</strong> （大佬给出的例子）<br>你现在要通过上图的方法，给出你对这个房子的判断：这是不是个好房子</p><p>虽然这个例子主观性过强，但我们假设只要 x1 x2 一定，这个房子就是好房子</p><p>总结一下：<br>输入 x1  x2<br>输出 一个判断 y </p><h2 id="Forward-Propagation-正向传播"><a href="#Forward-Propagation-正向传播" class="headerlink" title="Forward Propagation 正向传播"></a>Forward Propagation 正向传播</h2><p>我们现在讨论的东西，是关于如何给出判断的，图中已经给出了，相信很容易看懂。</p><p>我再写一遍：<code>z = w1*x1 + w2*x2 + b</code><br><code>y = σ(z)</code></p><p>但他们都是什么意思呢？</p><p>x1 x2 我们已经知道了，但是w1 w2表示了什么呢？<br>学过OI的可能知道<code>w</code>是Weight的缩写，译为<code>权重</code>。你可以想象，如果房屋面积 x1 对我很重要，那我就让 x1 乘上一个很大很大的数 w1，那么它就会对最终的值产生更大的影响</p><p>哪b呢？<br><code>b</code>是biase的缩写，译作<code>偏差</code>。很容易理解，如果你的预测总是差了0.00001，那么加上个0.00001不久一劳永逸了么</p><p>总结一下：<br>w ： 控制对应 x 对结果的影响<br>b ： 微调结果</p><p><code>σ(z)</code>是啥呢？</p><p>来张<code>sigmoid</code>函数的靓照</p><p><img src="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2559976033,3031253701&fm=26&gp=0.jpg" alt="sigmoid"></p><p>有点感觉了没有？它把 y 的值切成了两部分 <code>0 ~ 0.5</code> 和 <code>0.5 ~ 1</code>, 分别对应着 z 中 &lt;0 和&gt;0 的范围。<br>所以<code>σ(z)</code>的作用：把 z 的值转换为判断</p><p>σ(z)&gt;0.5 时 判断为真（当然假也行）<br>σ(z)&lt;0.5 时 判断为假（同上）</p><h2 id="Backward-Propagation-反向传播"><a href="#Backward-Propagation-反向传播" class="headerlink" title="Backward Propagation 反向传播"></a>Backward Propagation 反向传播</h2><p>刚才我们解释了怎么用正确的 w 和 b 来判断，但是它们是怎么来的？<br>……靠蒙的你信吗……</p><p>一开始，我们的 w 和 b 都取的是随机数，当然不能给出完全正确的答案。所以呢，我们需要微调 w 和 b ，让最终结果向真正的 y 靠拢。（注意这个图中 y 成了 a ，因为不是最终答案）</p><p><img src="https://i.loli.net/2020/03/05/vGZur9zQAlsNYTj.png" alt="pic2.png"></p><p>下面将是本文中最吓人的部分<del>请洗把脸再看</del>（实际上你不需要过多的了解）</p><p>我们既然要让结果向真正的 y 靠拢，就需要一个函数来判断它的偏差，这里就轮到 <code>Loss</code> 函数登场了。（图中最后一个方框的 L ）由于方法众多，公式冗长，你可以将它看作方差<code>(y-a)^2</code></p><p>知道了目标，具体的靠拢方法就要请到<code>梯度下降法</code>了（当然还有更多[转载自博客]）</p><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583389958103&di=df9df6b429f6dbbe7a2672dc90d17eb3&imgtype=0&src=http%3A%2F%2Fstatic.leiphone.com%2Fuploads%2Fnew%2Farticle%2F740_740%2F201705%2F59267cf6410cc.png%3FimageMogr2%2Fformat%2Fjpg%2Fquality%2F90" alt="梯度下降"></p><p>是不是挺像下山？我们的目标是 Loss 最小（J 函数是全局的 Loss），求出最小，即使是局部最小，也对我们有极大帮助。</p><p>等一下，我们是不是只求出了 Loss 最小，但是 w 和 b 还不知道呢。这时候就需要导数了。当然我们可以不知道，我觉得就是一个神奇的规律，建立在 Loss 和 w 、b 之间。这样，运用那种我们不太熟悉的神奇规律，就能优化 w 和 b 的值了。这就是机器学习最重要的一步 Optimize （优化）。</p><p>现在，我们已经万事俱备，只欠东风了。现在机器已经知道了学习方法，就是时候给它<del>灌教辅资料</del>了。</p><h2 id="Training-训练"><a href="#Training-训练" class="headerlink" title="Training 训练"></a>Training 训练</h2><p>这里不必多说，机器学习总是建立在大数据之上的，没有大数据的支持，机器学习的存在就没有意义。<br>现在假设我们拥有很多很多组房屋的数据 x1, x2，和你对它们的看法 y={0, 1}。<br>你便可以将它们灌给机器，执行一次正向传播，得出偏差之后，再进行一次反向传播，优化 w 和 b。</p><h2 id="Test-测试"><a href="#Test-测试" class="headerlink" title="Test 测试"></a>Test 测试</h2><p>当你把它们都灌给机器后，你已经得到了<strong>近似</strong>完美的 w 和 b，现在，你只要输入未知的的 x，<br>你就能得到<strong>近似</strong>正确的 y。</p><p>好啦，写到这里差不多就这样了，原理从中可以看出，但具体的推导和向量化优化以及跟优化的激活函数，还需要进一步的学习。</p><p>如果你觉得我文中有不妥或错误，欢迎跟我交流</p><h2 id="图形上的意义"><a href="#图形上的意义" class="headerlink" title="图形上的意义"></a>图形上的意义</h2><p><img src="https://i.loli.net/2020/03/05/AeTaYH6XCEWhjKt.png" alt="image.png"></p><p>如图，圈点代表着好房子，叉点代表着不好的房子</p><p>我们求出的，实际是好房子与不好房子的分界线（蓝线）</p><p>我们这里解决的是一个二分分类的问题，实际上也是机器学习最基础的也是最早的问题。当然也比较有意思。</p>]]></content>
    
    <summary type="html">
    
      最近开始学习机器学习，了解了Logistic Regression 的原理。我个人认为，Logistic Regression 是机器学习最基础的模型，它诠释了机器学习的基本原理。
    
    </summary>
    
    
      <category term="Other" scheme="http://hiztr.cn/categories/Other/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring Boot 注入静态变量</title>
    <link href="http://hiztr.cn/2020/03/04/Static-Inject-in-Springboot/"/>
    <id>http://hiztr.cn/2020/03/04/Static-Inject-in-Springboot/</id>
    <published>2020-03-04T13:00:30.000Z</published>
    <updated>2020-05-19T09:04:52.965Z</updated>
    
    <content type="html"><![CDATA[<p>你承受过NullPointerException的痛苦吗？Spring Boot的静态变量注入使我体会到了生命的意义（手动滑稽）</p><a id="more"></a><p>如果你曾经试过如下的一段代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;database.driver&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br></pre></td></tr></table></figure><p>如果程序鲁棒性不好，你便会得到一个<code>NullPointerException</code><br>反正是不能达到你想要的目的，给静态变量赋值。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol><li><p>用一个非静态的变量当中介，像这样</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;database.driver&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String _driver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br></pre></td></tr></table></figure><p> 然后在构造函数中将_driver赋给driver即可</p></li><li><p>写一个<code>non-static</code>的set方法，像酱紫</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseDao</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDriver</span><span class="params">(@Value(<span class="string">"$&#123;database.driver&#125;"</span>)</span> String driver) </span>&#123;</span><br><span class="line">        BaseDao.driver = driver;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>set方法一定是non-static的</li><li>一定要小心加载顺序，static代码块不要随便写，不然又是<code>NullPointerException</code></li></ol>]]></content>
    
    <summary type="html">
    
      你承受过NullPointerException的痛苦吗？Spring Boot的静态变量注入使我体会到了生命的意义（手动滑稽）
    
    </summary>
    
    
      <category term="Develop" scheme="http://hiztr.cn/categories/Develop/"/>
    
    
      <category term="java" scheme="http://hiztr.cn/tags/java/"/>
    
      <category term="springboot" scheme="http://hiztr.cn/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>Java仿制GUI系统控制台</title>
    <link href="http://hiztr.cn/2020/03/04/Make_a_gui_in_java/"/>
    <id>http://hiztr.cn/2020/03/04/Make_a_gui_in_java/</id>
    <published>2020-03-04T13:00:00.000Z</published>
    <updated>2020-05-26T05:20:32.178Z</updated>
    
    <content type="html"><![CDATA[<p>在使用Java编程的时候，你可能会厌倦那个黑色的框框控制台，然而，在你使用GUI时，有些时候又会怀念那个框框。我现在便遇到了这样的一个情况，需要仿制一个系统控制台来显示系统输出(<code>System.out</code>和<code>System.err</code>)，分开显示。</p><a id="more"></a><h2 id="用PrintStream仿制GUI系统控制台"><a href="#用PrintStream仿制GUI系统控制台" class="headerlink" title="用PrintStream仿制GUI系统控制台"></a>用PrintStream仿制GUI系统控制台</h2><blockquote><p><strong>不要</strong>试图在大型应用内使用PrintStream，因为他永远不会抛出<code>IOException</code>，调试用用算了</p></blockquote><p>在使用Java编程的时候，你可能会厌倦那个黑色的框框控制台，然而，在你使用GUI时，有些时候又会怀念那个框框。<br>我遇到了这样的一个情况，便是需要仿制一个系统控制台来显示系统输出(<code>System.out</code>和<code>System.err</code>)，分开显示。之所以说是仿制，因为只能输出不能输入（而且很丑）。<br>主要思路是用两个PrintStream（重写了<code>write</code>函数）来替代<code>System.out</code>和<code>System.err</code></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><p>主程序，将输出重定向</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ztr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ztr.frames.ConsoleFrame;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        PrintStream sysOut = System.out;</span><br><span class="line">        PrintStream sysErr = System.err;</span><br><span class="line">        <span class="comment">/*获取控制台输出*/</span></span><br><span class="line">        ConsoleFrame.init();</span><br><span class="line">        System.setOut(ConsoleFrame.getSysOutps());</span><br><span class="line">        System.setErr(ConsoleFrame.getSysErrps());</span><br><span class="line">        ConsoleFrmae.setVisible(<span class="keyword">true</span>)</span><br><span class="line">        <span class="comment">/*这里往下的输出都会被重定向到ConsoleFrame的texrarea*/</span></span><br><span class="line">        System.out.println(<span class="string">"blablabla"</span>);</span><br><span class="line">        <span class="comment">/*恢复原始输出！！,小心被坑*/</span></span><br><span class="line">        System.setOut(sysOut);</span><br><span class="line">        System.setErr(sysErr);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ConsoleFrame-java"><a href="#ConsoleFrame-java" class="headerlink" title="ConsoleFrame.java"></a>ConsoleFrame.java</h3><p>一个静态的类，用来显示仿制的Console,在其中重写了PrintStream</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ztr.frames;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowListener;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsoleFrame</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Frame f;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Panel out, err;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> TextArea console, consoleErr;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> PrintStream SysOutps = <span class="keyword">null</span>, SysErrps = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        f = <span class="keyword">new</span> Frame(<span class="string">"System Console"</span>);</span><br><span class="line">        CardLayout layout = <span class="keyword">new</span> CardLayout();</span><br><span class="line">        f.setLayout(layout);</span><br><span class="line">        out  = <span class="keyword">new</span> Panel();</span><br><span class="line">        out.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">2</span>, <span class="number">1</span>));</span><br><span class="line">        console = <span class="keyword">new</span> TextArea();</span><br><span class="line">        console.setColumns(<span class="number">100</span>);</span><br><span class="line">        console.setRows(<span class="number">50</span>);</span><br><span class="line">        consoleErr = <span class="keyword">new</span> TextArea();</span><br><span class="line">        consoleErr.setColumns(<span class="number">100</span>);</span><br><span class="line">        consoleErr.setRows(<span class="number">50</span>);</span><br><span class="line">        consoleErr.setBackground(Color.pink);</span><br><span class="line">        <span class="comment">/*重写方法，把输出重定向，即append到对应的textarea上*/</span></span><br><span class="line">        SysOutps = <span class="keyword">new</span> PrintStream(System.out) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">                console.append(String.valueOf(b));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">byte</span>[] buf, <span class="keyword">int</span> off, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">                console.append(<span class="keyword">new</span> String(buf, off, len));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        SysErrps = <span class="keyword">new</span> PrintStream(System.out) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">                consoleErr.append(String.valueOf(b));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">byte</span>[] buf, <span class="keyword">int</span> off, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">                consoleErr.append(<span class="keyword">new</span> String(buf, off, len));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        out.add(console);</span><br><span class="line">        out.add(consoleErr);</span><br><span class="line">        f.add(out);</span><br><span class="line">        f.pack();</span><br><span class="line">        f.addWindowListener(<span class="keyword">new</span> WindowListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> PrintStream <span class="title">getSysOutps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SysOutps;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> PrintStream <span class="title">getSysErrps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SysErrps;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setVisible</span><span class="params">(<span class="keyword">boolean</span> vis)</span> </span>&#123;</span><br><span class="line">        f.setVisible(vis);;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>大概就是个很丑的框框（本来就是），我也懒得写，就用awt凑数了<br><img src="https://img-blog.csdnimg.cn/20200212112855844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="Console"><br>用SpringBoot的输出</p><h2 id="几句话"><a href="#几句话" class="headerlink" title="几句话"></a>几句话</h2><ul><li><strong>不要</strong>试图在大型应用内使用PrintStream，因为他永远不会抛出<code>IOException</code>，调试用用算了</li><li>在用完PrintStream后一定要恢复原始输出，除非你知道关闭后会不会还有输出</li><li>PrintStream的核心是<code>write</code>函数，重写这个就够了（除非你有信心全部重写）</li></ul>]]></content>
    
    <summary type="html">
    
      在使用Java编程的时候，你可能会厌倦那个黑色的框框控制台，然而，在你使用GUI时，有些时候又会怀念那个框框。我现在便遇到了这样的一个情况，需要仿制一个系统控制台来显示系统输出(`System.out`和`System.err`)，分开显示。
    
    </summary>
    
    
      <category term="Develop" scheme="http://hiztr.cn/categories/Develop/"/>
    
    
      <category term="java" scheme="http://hiztr.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>修改 IDEA 自带的 maven 源</title>
    <link href="http://hiztr.cn/2020/03/04/Change-Maven-in-Idea/"/>
    <id>http://hiztr.cn/2020/03/04/Change-Maven-in-Idea/</id>
    <published>2020-03-03T16:00:00.000Z</published>
    <updated>2020-05-19T09:04:28.907Z</updated>
    
    <content type="html"><![CDATA[<p>作死用过idea自带maven的都知道，在国内真的贼慢。就导入几个依赖就得花上大半个小时。于是我一番百度，果断更改了maven镜像源。现在记录下来以免再次踩坑。</p><a id="more"></a><h2 id="如何提高idea自带maven的更新速度"><a href="#如何提高idea自带maven的更新速度" class="headerlink" title="如何提高idea自带maven的更新速度"></a>如何提高idea自带maven的更新速度</h2><p>作死用过idea自带maven的都知道，在国内真的贼慢。就导入几个依赖就得花上大半个小时。于是我一番百度，果断更改了maven镜像源。现在记录下来以免再次踩坑。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ol><li>打开File - Settings<br><img src="https://img-blog.csdnimg.cn/20200206104948630.png" alt="files"></li><li>在搜索框内输入<code>maven</code></li><li>打开如图所示的地址<br><img src="https://img-blog.csdnimg.cn/20200206105655968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="bal"></li><li>修改， 加入如下代码 <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>uk<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://uk.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>CN<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>OSChina Central<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.oschina.net/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>internal nexus repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;url&gt;http://192.168.1.100:8081/nexus/content/groups/public/&lt;/url&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo.maven.apache.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure>  如图<img src="https://img-blog.csdnimg.cn/20200206110055542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlbGxvV29ybGRaVFI=,size_16,color_FFFFFF,t_70" alt="s"></li><li>重启一下idea，试试效果</li></ol>]]></content>
    
    <summary type="html">
    
      作死用过idea自带maven的都知道，在国内真的贼慢。就导入几个依赖就得花上大半个小时。于是我一番百度，果断更改了maven镜像源。
    
    </summary>
    
    
      <category term="Develop" scheme="http://hiztr.cn/categories/Develop/"/>
    
    
      <category term="java" scheme="http://hiztr.cn/tags/java/"/>
    
  </entry>
  
</feed>
